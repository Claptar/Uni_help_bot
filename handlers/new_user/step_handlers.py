from create_env import bot
from database_queries import (
    insert_action,
    check_user_group,
    insert_user,
    create_custom_timetable,
)
from ..helpers import today_tomorrow_keyboard
from ..states import Start

from aiogram import types
from aiogram.dispatcher.storage import FSMContext


async def initiate(message: types.Message):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π '/start' –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    group = await check_user_group(message.chat.id)
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    if group[0]:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        await bot.send_message(
            message.chat.id,
            "–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç! üôÉ\n–ú—ã —É–∂–µ —Å —Ç–æ–±–æ–π –∑–Ω–∞–∫–æ–º—ã üòâ "
            "–ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —è –Ω–∞–ø–æ–º–Ω–∏–ª —Ç–µ–±–µ, —á—Ç–æ —è —É–º–µ—é)",
            reply_markup=today_tomorrow_keyboard(),
        )
    elif not group[0] and group[1] == "empty_result":  # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        await Start.group.set()  # –∏–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ Start.group
        await bot.send_message(
            message.chat.id,
            "–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç! üôÉ\n–î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ü–æ–º–æ–≥–∞—Ç–æ—Ä. "
            "–ú–æ–∂–µ—à—å —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –º–Ω–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ, "
            "—á—Ç–æ–±—ã —è –∑–Ω–∞–ª, —á–µ–º –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?",
        )
        await insert_action(
            "start", message.chat.id
        )  # –ó–∞–ø–∏—Å—å —Å–æ–±—ã—Ç–∏—è –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[types.KeyboardButton(name) for name in ["–£–∂–µ –Ω–µ —É—á—É—Å—å", "–í—ã—Ö–æ–¥"]]
        )
        await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
        await bot.send_message(  # '–£–∂–µ –Ω–µ —É—á—É—Å—å' - –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤
            message.chat.id,
            " –ù–µ –ø–æ–¥—Å–∫–∞–∂–µ—à—å –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã?\n"
            "(–í —Ñ–æ—Ä–º–∞—Ç–µ –ë00-228 –∏–ª–∏ 777, –∫–∞–∫ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏)",
            reply_markup=keyboard,
        )
    # –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞ (—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º –∏–ª–∏ –¥—Ä—É–≥–∞—è)
    else:
        await bot.send_message(
            message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞)"
        )


async def group_proceed(message: types.Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –≥—Ä—É–ø–ø—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –≥—Ä—É–ø–ø–∞ –≤ –±–∞–∑–µ.
    –ï—Å–ª–∏ –≥—Ä—É–ø–ø—ã –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞), —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –∑–∞–Ω–æ–≤–æ.
    –ï—Å–ª–∏ –≥—Ä—É–ø–ø–∞ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∑–∞–Ω–æ—Å–∏—Ç—Å—è –≤ —Ç–∞–±–ª–∏—Ü—É User, –∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å, –Ω—É–∂–Ω–æ –ª–∏ –µ–º—É –ª–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.
    """
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    (group, text) = (
        ("ALUMNI", "–ü—Ä–∏–≤–µ—Ç –¥–æ—Å—Ç–æ–ø–æ—á—Ç–µ–Ω–Ω–æ–º—É –≤—ã–ø—É—Å–∫–Ω–∏–∫—É! üëã")
        if message.text == "–£–∂–µ –Ω–µ —É—á—É—Å—å"
        else (  # —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –≤—ã–ø—É—Å–∫–Ω–∏–∫–∞ –∏ —Å—Ç—É–¥–µ–Ω—Ç–∞
            message.text,
            "–û—Ç–ª–∏—á–Ω–æ, –≤–æ—Ç –º—ã –∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å üôÉ",
        )
    )
    insert = await insert_user(message.chat.id, group)
    if insert[0]:  # –≥—Ä—É–ø–ø–∞ –µ—Å—Ç—å –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω
        await Start.custom.set()  # –º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ Start.custom
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["–•–æ—á—É", "–ù–µ —Ö–æ—á—É"]])
        await bot.send_message(  # –∑–∞–ø—Ä–æ—Å –æ –ª–∏—á–Ω–æ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏
            message.chat.id,
            text + "\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å "
            "–ª–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –Ω–∞–∂–º–∏ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É.",
            reply_markup=keyboard,
        )
    # –≥—Ä—É–ø–ø—ã –Ω–µ—Ç –≤ –±–∞–∑–µ / —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º, –ø—Ä–æ—Å–∏–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–≤–æ–¥
    elif not insert[0] and insert[1] == "other_error":
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[types.KeyboardButton(name) for name in ["–£–∂–µ –Ω–µ —É—á—É—Å—å", "–í—ã—Ö–æ–¥"]]
        )
        await bot.send_message(
            message.chat.id,
            "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –≤–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã –µ—â—ë —Ä–∞–∑, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞)",
            reply_markup=keyboard,
        )
    # –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞ —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º
    else:
        await bot.send_message(
            message.chat.id,
            "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞)",
        )
        await state.finish()


async def custom_proceed(message: types.Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω—É–∂–Ω–æ –ª–∏ –µ–º—É –ª–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –∑–∞–Ω–æ—Å–∏—Ç –∑–∞–≥–æ—Ç–æ–≤–∫—É
    –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π.
    """
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    if message.text == "–ù–µ —Ö–æ—á—É":  # –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π
        await bot.send_message(
            message.chat.id,
            "–•–æ—Ä–æ—à–æ, –Ω–æ –Ω–µ –∑–∞–±—ã–≤–∞–π, —á—Ç–æ —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è, "
            "–µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ–≥–æ –≤ –¥–µ–ª–µ üòâ\n"
            "–ß—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –ª–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –Ω–∞–ø–∏—à–∏ /custom.",
        )
        await bot.send_message(  # –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ –ø–∏—à–µ–º –ø—Ä–æ /help
            message.chat.id,
            "–ê —Ç–µ–ø–µ—Ä—å —Å–∫–æ—Ä–µ–µ –ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á–µ–º –µ—â–µ —è –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ!",
            reply_markup=today_tomorrow_keyboard(),
        )
    elif message.text == "–•–æ—á—É":  # –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π
        # async with state.proxy() as data:
        #     group = data['group']
        # –µ—Å–ª–∏ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –≤–µ—Ä–Ω—ã–π (–ø–æ –∏–¥–µ–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–æ)
        # –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ—Ç–æ–≤–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
        update = await create_custom_timetable(message.chat.id)
        if update[0]:
            await bot.send_message(
                message.chat.id,
                "–û—Ç–ª–∏—á–Ω–æ, –≤—Å–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å üôÉ\n"
                "–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ! "
                "–ß—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –µ–≥–æ, –Ω–∞–ø–∏—à–∏ /custom.",
            )
            await bot.send_message(
                message.chat.id,
                "–ê —Ç–µ–ø–µ—Ä—å —Å–∫–æ—Ä–µ–µ –ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, "
                "—á–µ–º –µ—â–µ —è –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ!",
                reply_markup=today_tomorrow_keyboard(),
            )
        else:
            await bot.send_message(
                message.chat.id,
                "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞)\n"
                "–ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ª–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –Ω–∞–ø–∏—à–∏ /custom.",
            )
            await bot.send_message(
                message.chat.id,
                "–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è! –ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, "
                "—á–µ–º –µ—â–µ —è –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ!",
                reply_markup=today_tomorrow_keyboard(),
            )
    await state.finish()  # –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π
