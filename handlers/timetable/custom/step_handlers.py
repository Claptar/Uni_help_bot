from create_env import bot
from database_queries import (
    insert_action,
    send_timetable,
    create_custom_timetable,
    update_custom_timetable,
)
from ...helpers import schedule_string, today_tomorrow_keyboard
from ...states import Custom

from aiogram import types
from aiogram.dispatcher import FSMContext


async def initiate(message: types.Message):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º '/custom'.
    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ, —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ª–∏—á–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
    –í —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ç–∞–∫–æ–≤–æ–≥–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–ø—Ä–æ—Å, —Ö–æ—á–µ—Ç –ª–∏ –æ–Ω
    –∑–∞–≤–µ—Å—Ç–∏ —Ç–∞–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. –ï—Å–ª–∏ –ª–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –≤ –±–∞–∑–µ,
    —Ñ—É–∫—Ü–∏—è –ø–æ—Å—ã–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –æ –≤—ã–±–æ—Ä–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –≤—ã–¥–∞—Ç—å –∏–ª–∏ –∫–∞–∫-—Ç–æ –ø–æ–º–µ–Ω—è—Ç—å.
    """
    await insert_action("custom", message.chat.id)
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    await bot.send_message(
        message.chat.id,
        "–•–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ "
        "–∏–ª–∏ —á—Ç–æ-—Ç–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –Ω–µ–º? "
        "–í —ç—Ç–æ–º —è –≤—Å–µ–≥–¥–∞ —Ä–∞–¥ —Ç–µ–±–µ –ø–æ–º–æ—á—å üòâ",
    )
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    timetable = await send_timetable(custom=True, chat_id=message.chat.id)
    if timetable[0] and timetable[1][0] is not None:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ
        await Custom.existing.set()  # –∏–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ Custom.existing
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[
                types.KeyboardButton(name)
                for name in ["–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å", "–ò–∑–º–µ–Ω–∏—Ç—å", "–í—ã—Ö–æ–¥"]
            ]
        )
        await bot.send_message(  # –≤–æ–ø—Ä–æ—Å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
            message.chat.id,
            "–í—ã–±–µ—Ä–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å —Å –ª–∏—á–Ω—ã–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º)",
            reply_markup=keyboard,
        )
    elif (
        timetable[0] and timetable[1][0] is None
    ):  # –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—â–µ –Ω–µ—Ç –ª–∏—á–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        await Custom.new.set()  # –∏–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ Custom.new
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[
                types.KeyboardButton(name)
                for name in ["–î–∞–≤–∞–π", "–ö–∞–∫-–Ω–∏–±—É–¥—å –ø–æ—Ç–æ–º", "–í—ã—Ö–æ–¥"]
            ]
        )
        await bot.send_message(
            message.chat.id,
            "–£ —Ç–µ–±—è –ø–æ–∫–∞ –µ—â–µ –Ω–µ—Ç –ª–∏—á–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è üò¢\n–î–∞–≤–∞–π –∑–∞–≤–µ–¥–µ–º –µ–≥–æ —Ç–µ–±–µ?",
            reply_markup=keyboard,
        )
    elif not timetable[0] and timetable[1] == "empty_result":
        await bot.send_message(
            message.chat.id,
            "–ö–∞–∂–µ—Ç—Å—è, –º—ã —Å —Ç–æ–±–æ–π –µ—â–µ –Ω–µ –∑–Ω–∞–∫–æ–º—ã... üò¢\nC–∫–æ—Ä–µ–π –ø–∏—à–∏ –º–Ω–µ /start!",
            reply_markup=today_tomorrow_keyboard(),
        )
    # –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    else:
        await bot.send_message(
            message.chat.id,
            "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞)",
            reply_markup=today_tomorrow_keyboard(),
        )


async def new_proceed(message: types.Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω—É–∂–Ω–æ –ª–∏ –µ–º—É –ª–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ,
    –≤ —Å–ª—É—á–∞–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∑–∞–≤–æ–¥–∏—Ç –µ–º—É —Ç–∞–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.
    """
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    if message.text == "–î–∞–≤–∞–π":  # –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        update = await create_custom_timetable(message.chat.id)
        if update[0]:
            await bot.send_message(  # –≤—Å–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏–ª–æ—Å—å
                message.chat.id,
                "–û—Ç–ª–∏—á–Ω–æ, –≤—Å–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å üôÉ\n"
                "–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ! "
                "–ß—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –µ–≥–æ, –Ω–∞–ø–∏—à–∏ /custom.",
                reply_markup=today_tomorrow_keyboard(),
            )
        else:  # –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞
            await bot.send_message(
                message.chat.id,
                "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞)",
                reply_markup=today_tomorrow_keyboard(),
            )
    else:  # –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        await bot.send_message(
            message.chat.id,
            "–•–æ—Ä–æ—à–æ, –Ω–æ –Ω–µ –∑–∞–±—ã–≤–∞–π, —á—Ç–æ —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è, "
            "–µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ–≥–æ –≤ –¥–µ–ª–µ üòâ",
            reply_markup=today_tomorrow_keyboard(),
        )
    await state.finish()  # —Ç—É–ø–∏–∫–æ–≤–∞—è –≤–µ—Ç–∫–∞, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π


async def existing_proceed(message: types.Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ª–∏—á–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è,
    –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –æ –Ω—É–∂–Ω–æ–º –¥–Ω–µ –Ω–µ–¥–µ–ª–∏.
    """
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    await Custom.weekday.set()  # –∏–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ Custom.weekday
    async with state.proxy() as data:
        data["choice"] = message.text  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç, –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–∞–ª—å—à–µ
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –¥–ª—è —Ç—ã–∫–æ–≤ –∏ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞ (—Å—Ç—Ä–æ–∫–∏ –≤—ã–±—Ä–∞–Ω—ã –ø–æ —Ä–∞–∑–º–µ—Ä—É —Å–ª–æ–≤)
    keyboard.add(*[types.KeyboardButton(name) for name in ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫"]])
    keyboard.add(*[types.KeyboardButton(name) for name in ["–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥"]])
    keyboard.add(*[types.KeyboardButton(name) for name in ["–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"]])
    keyboard.add(*[types.KeyboardButton(name) for name in ["–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", "–í—ã—Ö–æ–¥"]])
    text = (
        "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å)"
        if message.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å"
        else "–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è)"
    )  # –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Ç–≤–µ—Ç–∞ –≤—ã–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ—á–∫—É, –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
    await bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, " + text,
        reply_markup=keyboard,
    )


async def weekday_proceed(message: types.Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–Ω–µ–º –Ω–µ–¥–µ–ª–∏ –∏, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é,
    –ª–∏–±–æ –≤—ã–¥–∞–µ—Ç –µ–º—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –ª–∏–±–æ –ø–æ—Å—ã–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –æ –≤—Ä–µ–º–µ–Ω–∏ –ø–∞—Ä—ã, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å.
    """
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    timetable = await send_timetable(custom=True, chat_id=message.chat.id)
    if timetable[
        0
    ]:  # –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –Ω–∏–∫–∞–∫–æ–π –æ—à–∏–±–∫–∏ (–ª–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç–æ—á–Ω–æ –µ—Å—Ç—å, –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ä–∞–Ω–µ–µ)
        schedule = timetable[1][0]  # —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é
        await bot.send_message(  # –ø—Ä–∏—Å—ã–ª–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
            message.chat.id,
            schedule_string(schedule[message.text]),
            parse_mode="HTML",
        )  # parse_mode - —á—Ç–æ–±—ã —á–∏—Ç–∞–ª –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç
        async with state.proxy() as data:
            choice = data["choice"]
            data.clear()
        if choice == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å":  # —Å–º–æ—Ç—Ä–∏–º –Ω–∞ –æ—Ç–≤–µ—Ç, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ä–∞–Ω–µ–µ
            await bot.send_message(  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω—É–∂–Ω–æ –±—ã–ª–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ,
                message.chat.id,  # —Ç–æ —ç—Ç–æ —É–∂–µ —Å–¥–µ–ª–∞–Ω–æ
                "–ß–µ–º –µ—â—ë —è –º–æ–≥—É –ø–æ–º–æ—á—å?",
                reply_markup=today_tomorrow_keyboard(),
            )
            await state.finish()  # –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –≤—ã–∫–ª—é—á–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π
        else:  # –µ—Å–ª–∏ –ø–æ–ª—å–æ–≤–∞—Ç–µ–ª—é –Ω—É–∂–Ω–æ –±—ã–ª–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, —Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º, –∫–∞–∫—É—é –ø–∞—Ä—É –æ–Ω —Ö–æ—á–µ—Ç –ø–æ–º–µ–Ω—è—Ç—å
            await Custom.time.set()  # –∏–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ Custom.time
            async with state.proxy() as data:
                data["schedule"] = schedule  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –¥–µ–Ω—å
                data["day"] = message.text
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[
                    types.KeyboardButton(name)
                    for name in ["09:00 ‚Äì 10:25", "10:45 ‚Äì 12:10"]
                ]
            )
            keyboard.add(
                *[
                    types.KeyboardButton(name)
                    for name in ["12:20 ‚Äì 13:45", "13:55 ‚Äì 15:20"]
                ]
            )
            keyboard.add(
                *[
                    types.KeyboardButton(name)
                    for name in ["15:30 ‚Äì 16:55", "17:05 ‚Äì 18:30"]
                ]
            )
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["18:35 ‚Äì 20:00", "–í—ã—Ö–æ–¥"]]
            )
            await bot.send_message(
                message.chat.id,
                "–í—ã–±–µ—Ä–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Ä–µ–º—è, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ "
                "–Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å)",
                reply_markup=keyboard,
            )
    else:  # –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞
        await bot.send_message(
            message.chat.id,
            "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞)",
            reply_markup=today_tomorrow_keyboard(),
        )
        await state.finish()  # –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π


async def time_proceed(message: types.Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –ø–∞—Ä—ã, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å,
    —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞ —á—Ç–æ –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
    """
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    await Custom.edit.set()  # –∏–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ Custom.edit
    async with state.proxy() as data:
        data["time"] = message.text  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –ø–∞—Ä—ã
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(
        *[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]]
    )  # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
    await bot.send_message(
        message.chat.id,  # –ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã
        "–í–≤–µ–¥–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞ —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–º–µ–Ω–∏—Ç—å "
        "—ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ) (–ú–æ–∂–µ—à—å –ø—Ä–∏—Å—ã–ª–∞—Ç—å –º–Ω–µ –∏ —Å–º–∞–π–ª–∏–∫–∏)",
        reply_markup=keyboard,
    )


async def edit_proceed(message: types.Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä—ã,
    –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    –°–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ö–æ—á–µ—Ç –ª–∏ –æ–Ω –∏–∑–º–µ–Ω–∏—Ç—å —á—Ç–æ-—Ç–æ –µ—â–µ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å.
    """
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    async with state.proxy() as data:
        schedule = data["schedule"]  # –¥–æ—Å—Ç–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –¥–µ–Ω—å
        day = data["day"]
        schedule[day][data["time"]] = message.text  # –∑–∞–º–µ–Ω—è–µ–º –Ω—É–∂–Ω—É—é –ø–∞—Ä—É
        data.clear()
    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    update = await update_custom_timetable(message.chat.id, schedule)
    if update[0]:
        await Custom.again.set()  # –∏–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ Custom.again
        async with state.proxy() as data:
            data[
                "schedule"
            ] = schedule  # –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –¥–µ–Ω—å (–æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ state.proxy())
            data["day"] = day
        await bot.send_message(
            message.chat.id,
            "–û—Ç–ª–∏—á–Ω–æ, –≤—Å–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å üôÉ\n"
            "–•–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –µ—â–µ –∫–∞–∫–æ–µ-—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ "
            "–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å?",
        )
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[types.KeyboardButton(name) for name in ["–•–æ—á—É", "–ù–µ —Ö–æ—á—É", "–í—ã—Ö–æ–¥"]]
        )
        await bot.send_message(  # –ø–æ—Å—ã–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–∏—Ç—å
            message.chat.id,  # –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å —á—Ç–æ-—Ç–æ –µ—â–µ
            schedule_string(schedule[day]),
            parse_mode="HTML",
            reply_markup=keyboard,
        )
    else:  # –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞
        await bot.send_message(
            message.chat.id,
            "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞)",
            reply_markup=today_tomorrow_keyboard(),
        )
        await state.finish()


async def again_proceed(message: types.Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç –æ—Ç–≤–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ö–æ—á–µ—Ç –ª–∏ –æ–Ω –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.
    –ï—Å–ª–∏ —Ö–æ—á–µ—Ç, —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –≤—Ä–µ–º—è –ø–∞—Ä—ã.
    """
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    if message.text == "–ù–µ —Ö–æ—á—É":  # –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        await bot.send_message(
            message.chat.id,
            "–•–æ—Ä–æ—à–æ, –Ω–æ –Ω–µ –∑–∞–±—ã–≤–∞–π, —á—Ç–æ —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è, "
            "–µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –Ω–µ–º üòâ",
            reply_markup=today_tomorrow_keyboard(),
        )
        await state.finish()  # –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π
    else:  # –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        await Custom.time.set()  # –∏–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ Custom.time
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[types.KeyboardButton(name) for name in ["09:00 ‚Äì 10:25", "10:45 ‚Äì 12:10"]]
        )
        keyboard.add(
            *[types.KeyboardButton(name) for name in ["12:20 ‚Äì 13:45", "13:55 ‚Äì 15:20"]]
        )
        keyboard.add(
            *[types.KeyboardButton(name) for name in ["15:30 ‚Äì 16:55", "17:05 ‚Äì 18:30"]]
        )
        keyboard.add(
            *[types.KeyboardButton(name) for name in ["18:35 ‚Äì 20:00", "–í—ã—Ö–æ–¥"]]
        )
        await bot.send_message(
            message.chat.id,
            "–í—ã–±–µ—Ä–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Ä–µ–º—è, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å)",
            reply_markup=keyboard,
        )
