from aiogram import types
from aiogram.dispatcher.storage import FSMContext

from data_constructor import psg
from create_env import bot
from ..helpers import today_tomorrow_keyboard


async def exit_user(message: types.Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è, –≤—ã–ø–æ–ª–Ω—è—é—â–∞—è –≤—ã—Ö–æ–¥ –ø–æ –∂–µ–ª–∞–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞ –ª—é–±–æ–π —Å—Ç–∞–¥–∏–∏).
    """
    await psg.insert_action("exit", message.chat.id)
    current_state = (
        await state.get_state()
    )  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∑–∞–ø—É—â–µ–Ω–æ —Ö–æ—Ç—è –±—ã –∫–∞–∫–æ–µ-—Ç–æ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    if current_state is None:
        return
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    await bot.send_message(
        message.chat.id,
        "–ë–µ–∑ –ø—Ä–æ–±–ª–µ–º! –ù–æ —Ç—ã —ç—Ç–æ, –∑–∞—Ö–æ–¥–∏, –µ—Å–ª–∏ —á—Ç–æ üòâ",
        reply_markup=today_tomorrow_keyboard(),
    )
    # —Å—Ç–∏–∫–æ—Å "–¢—ã –∑–∞—Ö–æ–¥–∏ –µ—Å—á–æ"
    await bot.send_sticker(
        message.chat.id,
        "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
    )
    # –ü—Ä–∏ –≤—ã—Ö–æ–¥–µ –≤—ã–∫–ª—é—á–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π
    await state.finish()


async def help_user(message: types.Message):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π '/help' –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–º–∞–Ω–¥ –±–æ—Ç–∞.
    """
    await psg.insert_action("help", message.chat.id)
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    with open("files/help.txt", encoding="utf-8", mode="r") as f:
        text = f.read()
    await bot.send_message(message.chat.id, text)
