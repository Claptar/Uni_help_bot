from create_env import bot
from database_queries import insert_action
from handlers_utils.math_module import math_part
from ..states import Plots

import os

from aiogram import types
from aiogram.dispatcher import FSMContext


async def initiate(message: types.Message):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º '/plot' –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ø—Ä–æ—Å—å–±–æ–π
    —É–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞.
    """
    await insert_action("plot", message.chat.id)
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    await bot.send_message(
        message.chat.id,
        "–°–Ω–æ–≤–∞ –ª–∞–±–∫–∏ –¥–µ–ª–∞–µ—à—å?) –û—Ö —É–∂ —ç—Ç–∏ –≥—Ä–∞—Ñ–∏–∫–∏!..."
        " –°–µ–π—á–∞—Å –±—ã—Å—Ç—Ä–µ–Ω—å–∫–æ –≤—Å—ë –ø–æ—Å—Ç—Ä–æ—é, —Ç–æ–ª—å–∫–æ —Ç–µ–±–µ –ø—Ä–∏–¥—ë—Ç—Å—è"
        " –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤"
        "üòâ –ò –Ω–µ –∑–∞—Å–∏–∂–∏–≤–∞–π—Å—è, –ª–æ–∂–∏—Å—å —Å–ø–∞—Ç—å)",
    )
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*[types.KeyboardButton(name) for name in ["–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è", "–í—ã—Ö–æ–¥"]])
    await bot.send_message(
        message.chat.id,
        "–ö–∞–∫ –º—ã –Ω–∞–∑–æ–≤—ë–º –≥—Ä–∞—Ñ–∏–∫?\n"
        "–ï—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –¥–∞–≤–∞—Ç—å –µ–º—É –Ω–∞–∑–≤–∞–Ω–∏–µ, "
        "—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üòâ",
        reply_markup=keyboard,
    )
    await Plots.title_state.set()


async def title_proceed(message: types.Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ data storage –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç
    —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ø—Ä–æ—Å—å–±–æ–π —É–∫–∞–∑–∞—Ç—å –Ω—É–∂–Ω–æ –ª–∏ —Å—Ç—Ä–æ–∏—Ç—å –ø—Ä—è–º—É—é –ø–æ –º–Ω–∫.
    """
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    async with state.proxy() as data:
        if message.text == "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è":
            data["title"] = ""
        else:
            data["title"] = message.text
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*[types.KeyboardButton(name) for name in ["‚úÖ", "‚ùå", "–í—ã—Ö–æ–¥"]])
    await bot.send_message(
        message.chat.id, "–ü—Ä—è–º—É—é –ø–æ –ú–ù–ö —Å—Ç—Ä–æ–∏–º?", reply_markup=keyboard
    )
    await Plots.mnk_state.set()


async def mnk_proceed(message: types.Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–¥–Ω–∏–º –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ ['‚úÖ', '‚ùå'] –∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Ç–≤–µ—Ç–∞
    –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç error_bars_state –∏–ª–∏ plot_state.
    """
    await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
    if message.text == "‚úÖ":
        async with state.proxy() as data:
            data["mnk"] = True
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["0.0/0.0"]])
        await bot.send_message(
            message.chat.id,
            "–£–∫–∞–∂–∏ –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏ –ø–æ –æ—Å—è–º —Ö –∏ y –≤ "
            '—Ñ–æ—Ä–º–∞—Ç–µ "2.51/2.51", '
            "–µ—Å–ª–∏ –∫—Ä–µ—Å—Ç—ã –Ω–µ –Ω—É–∂–Ω—ã, —Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
            reply_markup=keyboard,
        )
        await Plots.error_bars_state.set()
    else:
        async with state.proxy() as data:
            data["mnk"] = False
            data["errors"] = [0.0, 0.0]
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
        with open("files/Example.xlsx", "rb") as example:
            await bot.send_document(message.chat.id, example)
        await bot.send_message(
            message.chat.id,
            "–ü—Ä–∏—à–ª–∏ .xlsx —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–∞–∫ –≤ example.xlsx, –∏ –≤—Å—ë –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ.",
            reply_markup=keyboard,
        )
        await Plots.plot_state.set()


async def error_bars_proceed(message: types.Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∫—Ä–µ—Å—Ç–æ–≤ –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–µ–π –∏ –ø—Ä–æ—Å–∏—Ç –ø—Ä–∏—Å–ª–∞—Ç—å excel —Ñ–∞–π–ª, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç
    —Å—Ç—Ä–æ–∏—Ç—å—Å—è –≥—Ä–∞—Ñ–∏–∫.
    """
    try:
        await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
        async with state.proxy() as data:
            data["errors"] = list(map(float, message.text.split("/")))
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
        with open("files/Example.xlsx", "rb") as expl:
            await bot.send_document(message.chat.id, expl)
        await bot.send_message(
            message.chat.id,
            "–ü—Ä–∏—à–ª–∏ .xlsx —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–∞–∫ –≤ example.xlsx –∏ –≤—Å—ë –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ.",
            reply_markup=keyboard,
        )
        await Plots.plot_state.set()
    except Exception as e:
        print(e)
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["0.0/0.0"]])
        await bot.send_message(
            message.chat.id,
            "–ù–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö( –î–∞–≤–∞–π –µ—â—ë —Ä–∞–∑. "
            "–ü—Ä–∏—à–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫—Ä–µ—Å—Ç–æ–≤ –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–µ–π –ø–æ –æ—Å—è–º —Ö –∏ y –≤ "
            '—Ñ–æ—Ä–º–∞—Ç–µ "2.51/2.51", –µ—Å–ª–∏ –∫—Ä–µ—Å—Ç—ã –Ω–µ –Ω—É–∂–Ω—ã, —Ç–æ'
            " –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
            reply_markup=keyboard,
        )


async def plot_finish(message: types.Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å Excel-—Ñ–∞–π–ª–æ–º, —Å—Ç—Ä–æ–∏—Ç –≥—Ä–∞—Ñ–∏–∫ –ø–æ –¥–∞–Ω–Ω—ã–º –≤–Ω—É—Ç—Ä–∏ –Ω–µ–≥–æ –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å
    –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏ –ø—Ä—è–º—ã—Ö (–µ—Å–ª–∏ –Ω–∞–¥–æ) –∏ pdf –∏ png —Ñ–∞–π–ª—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≥—Ä–∞—Ñ–∏–∫–∞.
    """
    try:
        await bot.send_chat_action(message.chat.id, "typing")  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
        file_id = message.document.file_id
        file = await bot.get_file(file_id)
        await bot.download_file(file.file_path, "file.xlsx")
        async with state.proxy() as data:
            title = data["title"]
            errors = data["errors"]
            mnk = data["mnk"]
            data.clear()
        coef = math_part.plots_drawer("file.xlsx", title, errors[0], errors[1], mnk)
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
        )
        await bot.send_message(
            message.chat.id, "–ü—Ä–∏–Ω–∏–º–∞–π —Ä–∞–±–æ—Ç—É!)", reply_markup=keyboard
        )
        with open("plot.png", "rb") as photo:
            await bot.send_chat_action(
                message.chat.id, "upload_document"
            )  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "upload document"
            await bot.send_document(message.chat.id, photo)
        if mnk:
            for i in range(len(coef)):
                a, b, d_a, d_b = coef[i]
                await bot.send_chat_action(
                    message.chat.id, "typing"
                )  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "typing"
                await bot.send_message(
                    message.chat.id,
                    f"–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã {i + 1}-–æ–π –ø—Ä—è–º–æ–π:\n"
                    f" a = {a} +- {d_a}\n"
                    f" b = {b} +- {d_b}",
                )
        with open("plot.pdf", "rb") as photo:
            await bot.send_chat_action(
                message.chat.id, "upload_document"
            )  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "upload document"
            await bot.send_document(message.chat.id, photo)
        os.remove("plot.pdf")
        os.remove("plot.png")
        math_part.BOT_PLOT = False
        os.remove("file.xlsx")
        await state.finish()
    except Exception as e:
        os.remove("file.xlsx")
        print(e)
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
        await bot.send_message(
            message.chat.id,
            "–¢—ã —Ç–æ—á–Ω–æ –ø—Ä–∏—Å–ª–∞–ª .xlsx —Ñ–∞–π–ª –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ? –î–∞–≤–∞–π –µ—â—ë —Ä–∞–∑!",
            reply_markup=keyboard,
        )
