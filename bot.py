from telebot import types
from data_constructor import psg
from math_module import math_part
from koryavov import kor

import os
import random
import re
import numpy as np
import pandas as pd
import requests
import telebot
import texting.texting_symbols
import timetable.timetable
import datetime

token = os.environ["TOKEN"]  # –¢–æ–∫–µ–Ω –¥–ª—è –±–æ—Ç–∞ –±–µ—Ä—ë—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
bot = telebot.TeleBot(token)
MESSAGE_NUM = 0
MESSAGE_COM = ""
Q_NUM = 0
PAR_NUM = 0
GROUP_NUM = ""
COURSE_NUM = 0
SUBJECT_NOW = ""
Q_SEQUENCE = []
SUBJECTS_PATH = {"–ú–∞—Ç–∞–Ω": "math", "–•–∏–º–∏—è": "chem_org"}
SUBJECTS = {
    "–ú–∞—Ç–∞–Ω": {
        "–ú–Ω–æ–∂–µ—Å—Ç–≤–æ Rn": 1,
        "–ü—Ä–µ–¥–µ–ª –∏ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ—Å—Ç—å": 2,
        "–î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ –∏—Å—á–∏—Å–ª–µ–Ω–∏–µ –≤ Rn": 3,
        "–ò–Ω—Ç–µ–≥—Ä–∞–ª –†–∏–º–∞–Ω–∞": 4,
        "–ú–µ—Ä–∞ –ñ–æ—Ä–¥–∞–Ω–∞": 5,
        "–ß–∏—Å–ª–æ–≤—ã–µ —Ä—è–¥—ã": 6,
    },
    "–•–∏–º–∏—è": {
        "–ë–∏–ª–µ—Ç—ã 1-2": 1,
        "–ë–∏–ª–µ—Ç—ã 3,5": 2,
        "–ë–∏–ª–µ—Ç—ã 4,6": 3,
        "–ë–∏–ª–µ—Ç 7": 4,
        "–ë–∏–ª–µ—Ç 8": 5,
        "–ë–∏–ª–µ—Ç 9": 6,
        "–ë–∏–ª–µ—Ç—ã 10-11": 7,
        "–ë–∏–ª–µ—Ç 12": 8,
        "–ë–∏–ª–µ—Ç 13": 9,
        "–ë–∏–ª–µ—Ç 14": 10,
        "–ë–∏–ª–µ—Ç 15": 11,
        "–ë–∏–ª–µ—Ç 16": 12,
        "–ë–∏–ª–µ—Ç 17": 13,
        "–ë–∏–ª–µ—Ç 18-19": 14,
        "–ë–∏–ª–µ—Ç 20-21": 15,
        "–ë–∏–ª–µ—Ç 22": 16,
        "–ë–∏–ª–µ—Ç 24": 17,
        "–ë–∏–ª–µ—Ç 25": 18,
        "–ë–∏–ª–µ—Ç 26": 19,
        "–ë–∏–ª–µ—Ç 27": 20,
        "–ë–∏–ª–µ—Ç 23": 21,
        "–ë–∏–ª–µ—Ç 34": 22,
        "–ë–∏–ª–µ—Ç 35": 23,
        "–ë–∏–ª–µ—Ç 36": 24,
    },
}


comms = ["help", "start", "plot", "timetable", "exam"]  # Comands list

crazy_tokens = 0
ANSW_ID = 0

# Plot constants
PLOT_MESSEGE = 0
PLOT_BUTTONS = [
    "–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞",
    "–ü–æ–¥–ø–∏—Å—å –æ—Å–µ–π",
    "–ö—Ä–µ—Å—Ç—ã –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–µ–π",
    "–ì–æ—Ç–æ–≤–æ",
    "M–ù–ö",
]


@bot.message_handler(commands=["help"])
def help_def(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π '/help' –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–º–∞–Ω–¥ –±–æ—Ç–∞
    :param message: telebot.types.Message
    :return:
    """
    bot.send_message(
        message.chat.id,
        "–°–µ–π—á–∞—Å —è —Ä–∞—Å—Å–∫–∞–∂—É, —á–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å ‚ò∫Ô∏è\n"
        "/plot ‚Äî –ü–æ–ª—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ª–∞–±–µ –∏ —É–∂–µ —Ö–æ—á–µ—à—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫? –ó–∞–ø—Ä–æ—Å—Ç–æ!\n"
        "/timetable ‚Äî –ó–∞–±—ã–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?) –ë—ã–≤–∞–µ—Ç, –ø–∏—à–∏, —è –ø–æ–º–æ–≥—É üòâüì±\n"
        "/exam ‚Äî –ü–æ–¥—Å–∫–∞–∂—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–æ–≤, –Ω–æ —Ç—ã —Å–∞–º –∑–∞—Ö–æ—Ç–µ–ª... "
        " –Ø –Ω–µ –ª—é–±–ª—é –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å "
        "–æ –ø–ª–æ—Ö–æ–º...\n"
        "/koryavov ‚Äî –ü–æ–¥—Å–∫–∞–∂—É –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —ç—Ç–æ–π –∑–∞–¥–∞—á–µ–π –ø–æ —Ñ–∏–∑–∏–∫–µ –≤ –ö–æ—Ä—è–≤–æ–≤–µ."
        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±–µ—Ä—ë—Ç—Å—è —Å –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ mipt1.ru \n"
        "/profile ‚Äî –û–ø–µ—á–∞—Ç–∫–∞ –≤ –Ω–æ–º–µ—Ä–µ –∫—É—Ä—Å–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã? –ù–∞–∂–∏–º–∞–π, —Å–µ–π—á–∞—Å –∏—Å–ø—Ä–∞–≤–∏–º)\n"
        "/custom ‚Äî –ù–µ —Ö–æ–¥–∏—à—å –Ω–∞ –ª–µ–∫—Ü–∏–∏ –∏–ª–∏ –µ—Å—Ç—å —Ñ–∞–∫—É–ª—å—Ç–∞—Ç–∏–≤—ã ?"
        "–ò–∑–º–µ–Ω–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥ —Å–µ–±—è !",
    )


@bot.message_handler(commands=["profile"])
def choose_edit(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π '/profile' –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –æ–Ω —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    :param message:
    :return:
    """
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(
        *[
            types.KeyboardButton(name)
            for name in ["–ù–æ–º–µ—Ä –∫—É—Ä—Å–∞", "–ù–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã", "–í—ã—Ö–æ–¥"]
        ]
    )  # –∫–Ω–æ–ø–∫–∏ c –Ω–æ–º–µ—Ä–∞–º–∏ —Å–µ–º–µ—Å—Ç—Ä–æ–≤
    try:
        student = psg.get_student(message.chat.id)
        msg = bot.send_message(
            message.chat.id,
            f"–°–µ–π—á–∞—Å —É —Ç–µ–±—è —É–∫–∞–∑–∞–Ω–æ, —á—Ç–æ —Ç—ã —É—á–∏—à—å—Å—è –Ω–∞ {student[1]} –∫—É—Ä—Å–µ "
            f"–≤ {student[0]} –≥—Ä—É–ø–ø–µ."
            f" –ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç—ã —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å?",
            reply_markup=keyboard,
        )
        bot.register_next_step_handler(msg, edit_values)
    except Exception as e:
        print("–ê–®–ò–ü–ö–ê")
        print(e)
        bot.send_message(
            os.environ["ADMIN_1"],
            f"–ü–æ—Å–º–æ—Ç—Ä–∏ –ª–æ–≥–∏ —É —á—É–≤–∞–∫–∞"
            f" user = {message.from_user} id={message.chat.id}"
            f" –ø–æ—à–ª–∞ –ø–æ –ø–∏–∑–¥–µ 109 —Å—Ç—Ä–æ—á–∫–∞...",
        )
        bot.send_message(
            os.environ["ADMIN_2"],
            f"–ü–æ—Å–º–æ—Ç—Ä–∏ –ª–æ–≥–∏ —É —á—É–≤–∞–∫–∞"
            f" user = {message.from_user} id={message.chat.id}"
            f" –ø–æ—à–ª–∞ –ø–æ –ø–∏–∑–¥–µ 109 —Å—Ç—Ä–æ—á–∫–∞...",
        )
        bot.send_message(
            message.chat.id,
            "–ò–∑–≤–∏–Ω–∏, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∫–æ–º–∞–Ω–¥–∞ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–æ–∫ —É–∂–µ –≤–∑—è–ª–∞—Å—å –∑–∞ –¥–µ–ª–æ,"
            " –ø–æ–ø—Ä–æ–±—É–π —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∑–∂–µ) –ß—Ç–æ–±—ã –ø—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–∏–ª–∞—Å—å –±—ã—Å—Ç—Ä–µ–µ"
            " —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å @Error404NF",
        )


def edit_values(message):
    if message.content_type == "text":
        if message.text == "–ù–æ–º–µ—Ä –∫—É—Ä—Å–∞":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[types.KeyboardButton(name) for name in [1, 2, 3, 4, 5, "–í—ã—Ö–æ–¥"]]
            )
            msg = bot.send_message(
                message.chat.id, "–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–≥–æ –∫—É—Ä—Å–∞", reply_markup=keyboard
            )
            bot.register_next_step_handler(msg, edit_course)
        elif message.text == "–ù–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
            msg = bot.send_message(
                message.chat.id, "–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã", reply_markup=keyboard
            )
            bot.register_next_step_handler(msg, edit_group)
        elif message.text == "–í—ã—Ö–æ–¥":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–ü–µ—Ä–µ–¥—É–º–∞–ª? –ù—É –ª–∞–¥–Ω–æ...", reply_markup=keyboard
            )
            bot.send_sticker(
                message.chat.id,
                "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
            )
        else:
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[
                    types.KeyboardButton(name)
                    for name in ["–ù–æ–º–µ—Ä –∫—É—Ä—Å–∞", "–ù–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã", "–í—ã—Ö–æ–¥"]
                ]
            )
            msg = bot.send_message(
                message.chat.id, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –¥–∞–≤–∞–π –µ—â—ë —Ä–∞–∑", reply_markup=keyboard
            )
            bot.register_next_step_handler(msg, edit_values)
    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[
                types.KeyboardButton(name)
                for name in ["–ù–æ–º–µ—Ä –∫—É—Ä—Å–∞", "–ù–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã", "–í—ã—Ö–æ–¥"]
            ]
        )
        msg = bot.send_message(
            message.chat.id, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –¥–∞–≤–∞–π –µ—â—ë —Ä–∞–∑", reply_markup=keyboard
        )
        bot.register_next_step_handler(msg, edit_values)


def edit_course(message):
    if message.content_type == "text":
        if message.text == "–í—ã—Ö–æ–¥":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–ü–µ—Ä–µ–¥—É–º–∞–ª? –ù—É –ª–∞–¥–Ω–æ...", reply_markup=keyboard
            )
            bot.send_sticker(
                message.chat.id,
                "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
            )
        elif message.text.isdigit():
            psg.update_course(message.chat.id, int(message.text))
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–í—Å—ë –≥–æ—Ç–æ–≤–æ, –ø—Ä–æ–≤–µ—Ä—è–π)", reply_markup=keyboard
            )
        else:
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[types.KeyboardButton(name) for name in [1, 2, 3, 4, 5, "–í—ã—Ö–æ–¥"]]
            )
            msg = bot.send_message(
                message.chat.id,
                "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –≤—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞ –µ—â—ë —Ä–∞–∑",
                reply_markup=keyboard,
            )
            bot.register_next_step_handler(msg, edit_course)
    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in [1, 2, 3, 4, 5, "–í—ã—Ö–æ–¥"]])
        msg = bot.send_message(
            message.chat.id,
            "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –≤—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞ –µ—â—ë —Ä–∞–∑",
            reply_markup=keyboard,
        )
        bot.register_next_step_handler(msg, edit_course)


def edit_group(message):
    if message.content_type == "text":
        if message.text == "–í—ã—Ö–æ–¥":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–ü–µ—Ä–µ–¥—É–º–∞–ª? –ù—É –ª–∞–¥–Ω–æ...", reply_markup=keyboard
            )
            bot.send_sticker(
                message.chat.id,
                "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
            )
        else:
            psg.update_group_num(message.chat.id, message.text)
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–í—Å—ë –≥–æ—Ç–æ–≤–æ, –ø—Ä–æ–≤–µ—Ä—è–π)", reply_markup=keyboard
            )
    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
        msg = bot.send_message(
            message.chat.id,
            "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –≤–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã –µ—â—ë —Ä–∞–∑",
            reply_markup=keyboard,
        )
        bot.register_next_step_handler(msg, edit_group)


@bot.message_handler(commands=["koryavov"])
def koryavov1(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(
        *[types.KeyboardButton(name) for name in [1, 2, 3, 4, 5, "–í—ã—Ö–æ–¥"]]
    )  # –∫–Ω–æ–ø–∫–∏ c –Ω–æ–º–µ—Ä–∞–º–∏ —Å–µ–º–µ—Å—Ç—Ä–æ–≤
    msg = bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä —Å–µ–º–µ—Å—Ç—Ä–∞ –æ–±—â–µ–π —Ñ–∏–∑–∏–∫–∏: \n"
        "1) –ú–µ—Ö–∞–Ω–∏–∫–∞ \n"
        "2) –¢–µ—Ä–º–æ–¥–∏–Ω–∞–º–∏–∫–∞ \n"
        "3) –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ \n"
        "4) –û–ø—Ç–∏–∫–∞\n"
        "5) –ê—Ç–æ–º–Ω–∞—è –∏ —è–¥–µ—Ä–Ω–∞—è —Ñ–∏–∑–∏–∫–∞",
        reply_markup=keyboard,
    )
    bot.register_next_step_handler(msg, task_number)


def task_number(message):
    if message.content_type == "text":
        if message.text.isdigit() and 1 <= int(message.text) <= 5:
            kor.SEM = int(message.text)
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
            msg = bot.send_message(
                message.chat.id,
                "–û—Ç–ª–∏—á–Ω–æ, –Ω–∞–ø–∏—à–∏ —Ç–µ–ø–µ—Ä—å –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏",
                reply_markup=keyboard,
            )
            bot.register_next_step_handler(msg, task_page)
        elif message.text == "–í—ã—Ö–æ–¥":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–ü–µ—Ä–µ–¥—É–º–∞–ª? –ù—É –ª–∞–¥–Ω–æ...", reply_markup=keyboard
            )
            bot.send_sticker(
                message.chat.id,
                "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
            )
        else:
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[types.KeyboardButton(name) for name in [1, 2, 3, 4, 5, "–í—ã—Ö–æ–¥"]]
            )  # –∫–Ω–æ–ø–∫–∏ c –Ω–æ–º–µ—Ä–∞–º–∏ —Å–µ–º–µ—Å—Ç—Ä–æ–≤
            msg = bot.send_message(
                message.chat.id, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –¥–∞–≤–∞–π –µ—â—ë —Ä–∞–∑. –í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä —Å–µ–º–µ—Å—Ç—Ä–∞:"
            )
            bot.register_next_step_handler(msg, task_number)
    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[types.KeyboardButton(name) for name in [1, 2, 3, 4, 5, "–í—ã—Ö–æ–¥"]]
        )  # –∫–Ω–æ–ø–∫–∏ c –Ω–æ–º–µ—Ä–∞–º–∏ —Å–µ–º–µ—Å—Ç—Ä–æ–≤
        msg = bot.send_message(
            message.chat.id, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –¥–∞–≤–∞–π –µ—â—ë —Ä–∞–∑. –í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä —Å–µ–º–µ—Å—Ç—Ä–∞:"
        )
        bot.register_next_step_handler(msg, task_number)


def task_page(message):
    if message.content_type == "text":
        if math_part.is_digit(message.text):
            kor.TASK = message.text
            reply = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–∑—è—Ç–∞ —Å —Å–∞–π—Ç–∞ mipt1.ru \n\n" + kor.kor_page(
                kor.SEM, kor.TASK
            )
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(message.chat.id, reply, reply_markup=keyboard)
        elif message.text == "–í—ã—Ö–æ–¥":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–ü–µ—Ä–µ–¥—É–º–∞–ª? –ù—É –ª–∞–¥–Ω–æ...", reply_markup=keyboard
            )
            bot.send_sticker(
                message.chat.id,
                "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
            )
        else:
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
            msg = bot.send_message(
                message.chat.id,
                "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –¥–∞–≤–∞–π –µ—â—ë —Ä–∞–∑. –í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏.",
                reply_markup=keyboard,
            )
            bot.register_next_step_handler(msg, task_page)
    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
        msg = bot.send_message(
            message.chat.id,
            "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –¥–∞–≤–∞–π –µ—â—ë —Ä–∞–∑. –í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏.",
            reply_markup=keyboard,
        )
        bot.register_next_step_handler(msg, task_page)


@bot.message_handler(commands=["start"])
def check(message):
    data = psg.read_data()
    if message.chat.id in data.index:
        pass
    else:
        psg.insert_data(message.chat.id, "–ë00-228", 0)
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[types.KeyboardButton(name) for name in range(1, 6)]
        )  # –∫–Ω–æ–ø–∫–∏ c –Ω–æ–º–µ—Ä–∞–º–∏ –∫—É—Ä—Å–æ–≤
        msg = bot.send_message(
            message.chat.id,
            "–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç üôÉ –î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! –ú–µ–Ω—è –∑–æ–≤—É—Ç A2."
            " –ú–æ–∂–µ—à—å —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –º–Ω–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ,"
            " —á—Ç–æ–±—ã —è –∑–Ω–∞–ª, –∫–∞–∫ –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?"
            " –î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–≥–æ –∫—É—Ä—Å–∞.",
            reply_markup=keyboard,
        )
        bot.register_next_step_handler(msg, group_num)


def group_num(message):
    if (message.text.isdigit()) and (1 <= int(message.text) <= 5):
        psg.update_course(message.chat.id, int(message.text))
        keyboard = types.ReplyKeyboardRemove()
        msg = bot.send_message(
            message.chat.id,
            "–û—Ç–ª–∏—á–Ω–æ, –∞ —Ç–µ–ø–µ—Ä—å –Ω–µ –ø–æ–¥—Å–∫–∞–∂–µ—à—å –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã?\n"
            "(–í —Ñ–æ—Ä–º–∞—Ç–µ –ë00‚Äì228 –∏–ª–∏ 777, –∫–∞–∫ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏)",
            reply_markup=keyboard,
        )
        bot.register_next_step_handler(msg, end)
    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[types.KeyboardButton(name) for name in range(1, 6)]
        )  # –∫–Ω–æ–ø–∫–∏ c –Ω–æ–º–µ—Ä–∞–º–∏ –∫—É—Ä—Å–æ–≤
        msg = bot.send_message(
            message.chat.id,
            "–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞)",
            reply_markup=keyboard,
        )
        bot.register_next_step_handler(msg, group_num)


def end(message):
    psg.update_group_num(message.chat.id, message.text)
    keyboard = types.ReplyKeyboardMarkup(
        resize_keyboard=True
    )  # –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –∑–∞–≤—Ç—Ä–∞
    keyboard.add(*[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]])
    bot.send_message(
        message.chat.id,
        "–û—Ç–ª–∏—á–Ω–æ, –≤–æ—Ç –º—ã –∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å üôÉ –Ø –æ—á–µ–Ω—å –ª—é–±–ª—é –ø–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º,"
        " –Ω–∞–ø–∏—à–∏ /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é. ",
        reply_markup=keyboard,
    )


@bot.message_handler(commands=["pb"])
def pb(message):
    bot.send_message(message.chat.id, "–•–æ—á–µ—à—å –≤—Å–ø–æ–º–Ω–∏—Ç—å –ø–∞—Ä–æ—á–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π?)üìöüìö")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*[types.KeyboardButton(name) for name in SUBJECTS.keys()])
    msg = bot.send_message(
        message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=keyboard
    )
    bot.register_next_step_handler(msg, sub)


def sub(message):
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π start, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç
     –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é  paragraph()
    :param message: telebot.types.Message
    :return:
    """
    global Q_NUM, SUBJECT_NOW, SUBJECTS
    if message.text in SUBJECTS.keys():
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[types.KeyboardButton(name) for name in SUBJECTS[message.text].keys()]
        )
        msg = bot.send_message(
            message.chat.id, "–ö–∞–∫–æ–π —Ä–∞–∑–¥–µ–ª —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–±–æ—Ç–∞—Ç—å?", reply_markup=keyboard
        )
        SUBJECT_NOW = message.text
        bot.register_next_step_handler(msg, par)

    elif message.text == "–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ":
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[types.KeyboardButton(name) for name in SUBJECTS[SUBJECT_NOW].keys()]
        )
        msg = bot.send_message(
            message.chat.id, "–ö–∞–∫–æ–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–±–æ—Ç–∞—Ç—å?", reply_markup=keyboard
        )
        bot.register_next_step_handler(msg, par)

    elif message.text == "–í—Å—ë, —Ö–≤–∞—Ç–∏—Ç" or message.text == "–í –¥—Ä—É–≥–æ–π —Ä–∞–∑...":
        keyboard = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, "–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –µ—â—ë!", reply_markup=keyboard)
        SUBJECT_NOW = ""

    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[types.KeyboardButton(name) for name in ["–ú–∞—Ç–∞–Ω", "–í –¥—Ä—É–≥–æ–π —Ä–∞–∑..."]]
        )
        msg = bot.send_message(
            message.chat.id,
            "–ò–∑–≤–∏–Ω–∏, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª, –º–æ–∂–µ—à—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç—å?",
            reply_markup=keyboard,
        )
        bot.register_next_step_handler(msg, sub)


def par(message):
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π subject(). –û–Ω–∞ —Ä–∞–Ω–¥–æ–º–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞ –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    :param message: telebot.types.Message
    :return:
    """
    global Q_NUM, PAR_NUM, SUBJECTS, SUBJECT_NOW
    path = os.path.abspath("")
    if (message.text in SUBJECTS[SUBJECT_NOW].keys()) or (message.text == "–ï—â—ë"):
        if message.text in SUBJECTS[SUBJECT_NOW].keys():
            PAR_NUM = SUBJECTS[SUBJECT_NOW][message.text]
        questions = pd.read_excel(
            f"{path}/flash_cards/{SUBJECTS_PATH[SUBJECT_NOW]}/{PAR_NUM}/flash_data.xlsx",
            header=None,
        )
        d = np.array(questions)
        for i in range(0, len(d)):
            Q_NUM = i
            question = d[Q_NUM, 0]
            bot.send_message(message.chat.id, question)
            with open(
                f"{path}/flash_cards/{SUBJECTS_PATH[SUBJECT_NOW]}/{PAR_NUM}/{Q_NUM + 1}.png",
                "rb",
            ) as photo:
                bot.send_photo(message.chat.id, photo)


@bot.message_handler(commands=["flash_cards"])
def flash_cards(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–º–∞–Ω–¥–æ–π '/flash_cards' –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Å—Å–∏—é —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
     –æ—Ç–ø—Ä–∞–≤–ª—è—è –∫–Ω–æ–ø–∫–∏ —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–µ–¥–º–µ—Ç–∞. –î–æ–±–∞–≤–ª—è–µ—Ç—Å—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫ –∫–æ—Ç–æ—Ä–æ–π
     –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –¥–∞–ª—å—à–µ –≤ callback_query_handler
    :param message: telebot.types.Message
    :return:
    """
    bot.send_message(message.chat.id, "–•–æ—á–µ—à—å –≤—Å–ø–æ–º–Ω–∏—Ç—å –ø–∞—Ä–æ—á–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π?)üìöüìö")
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(
        *[
            types.InlineKeyboardButton(text=name, callback_data=name)
            for name in SUBJECTS.keys()
        ]
    )
    bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=keyboard)


@bot.callback_query_handler(func=lambda c: c.data in SUBJECTS.keys())
def subject(c):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç callback —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø—Ä–µ–¥–º–µ—Ç–∞ –∏ –∏–∑–º–µ–Ω—è–µ—Ç
     —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–¥–µ–ª–æ–≤.
    :param c: telebot.types.CallbackQuery
    :return:
    """
    global Q_NUM, SUBJECT_NOW, SUBJECTS
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(
        *[
            types.InlineKeyboardButton(text=name, callback_data=name)
            for name in SUBJECTS[c.data].keys()
        ]
    )
    bot.edit_message_text(
        chat_id=c.message.chat.id,
        message_id=c.message.message_id,
        text="–ö–∞–∫–æ–π —Ä–∞–∑–¥–µ–ª —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–±–æ—Ç–∞—Ç—å?",
        parse_mode="Markdown",
        reply_markup=keyboard,
    )
    SUBJECT_NOW = c.data


@bot.callback_query_handler(func=lambda c: (SUBJECT_NOW != "") or (c.data == "–ï—â—ë"))
def paragraph(c):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç callback —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ä–∞–∑–¥–µ–ª–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–∞–Ω–µ–µ –ø—Ä–µ–¥–º–µ—Ç–∞
    –∏ –∏–∑–º–µ–Ω—è–µ—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏–∑ —ç—Ç–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞.
    :param c: telebot.types.CallbackQuery
    :return:
    """
    global Q_NUM, PAR_NUM, SUBJECTS, SUBJECT_NOW, Q_SEQUENCE
    path = os.path.abspath("")
    if ANSW_ID:
        bot.delete_message(c.message.chat.id, ANSW_ID)
    if c.data in SUBJECTS[SUBJECT_NOW].keys():
        PAR_NUM = SUBJECTS[SUBJECT_NOW][c.data]
    # –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤
    questions = pd.read_excel(
        f"{path}/flash_cards/{SUBJECTS_PATH[SUBJECT_NOW]}/{PAR_NUM}/flash_data.xlsx",
        header=None,
    )
    # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤ numpy –º–∞—Å—Å–∏–≤
    questions = np.array(questions)
    if not Q_SEQUENCE:
        i = 0
        for _ in questions:
            Q_SEQUENCE.append(i)
            i += 1
        random.shuffle(Q_SEQUENCE)
    Q_NUM = Q_SEQUENCE[0]
    Q_SEQUENCE.pop(0)
    question = questions[Q_NUM, 0]
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(
        *[
            types.InlineKeyboardButton(text=name, callback_data=name)
            for name in ["–ü–æ–∫–∞–∂–∏"]
        ]
    )
    bot.edit_message_text(
        chat_id=c.message.chat.id,
        message_id=c.message.message_id,
        text=question,
        parse_mode="Markdown",
        reply_markup=keyboard,
    )


@bot.callback_query_handler(func=lambda c: c.data == "–ü–æ–∫–∞–∂–∏")
def answer(c):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç callback —Å —Ç–µ–∫—Å—Ç–æ–º "–ü–æ–∫–∞–∂–∏". –ü—Ä–∏—Å—ã–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å.
    :param c: telebot.types.CallbackQuery
    :return:
    """
    global Q_NUM, PAR_NUM, ANSW_ID
    path = os.path.abspath("")
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(
        *[
            types.InlineKeyboardButton(text=name, callback_data=name)
            for name in ["–ï—â—ë", "–í—Å—ë, —Ö–≤–∞—Ç–∏—Ç"]
        ]
    )
    with open(
        f"{path}/flash_cards/{SUBJECTS_PATH[SUBJECT_NOW]}/{PAR_NUM}/{Q_NUM + 1}.png",
        "rb",
    ) as photo:
        bot.edit_message_text(
            chat_id=c.message.chat.id,
            message_id=c.message.message_id,
            text="–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç",
            parse_mode="Markdown",
            reply_markup=keyboard,
        )
        msg = bot.send_photo(c.message.chat.id, photo)
        ANSW_ID = msg.message_id


@bot.callback_query_handler(func=lambda c: c.data == "–í—Å—ë, —Ö–≤–∞—Ç–∏—Ç")
def stop_cards(c):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç callback —Å —Ç–µ–∫—Å—Ç–æ–º "–í—Å—ë, —Ö–≤–∞—Ç–∏—Ç". –ó–∞–≤–µ—Ä—à–∞–µ—Ç —Å–µ–∞–Ω—Å –∏–≥—Ä—ã.
    :param c: telebot.types.CallbackQuery
    :return:
    """
    global ANSW_ID
    bot.edit_message_text(
        chat_id=c.message.chat.id,
        message_id=c.message.message_id,
        text="–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –µ—â—ë üòâ",
        parse_mode="Markdown",
    )
    bot.delete_message(c.message.chat.id, ANSW_ID)


@bot.message_handler(commands=["plot"])
def plot(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º '/plot'. –ò–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç—Å—è –ø—Ä–æ—Ü–µ—Å—Å —Ä–∏—Å–æ–≤–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞. –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é ax_x()
    :param message: telebot.types.Message
    :return:
    """
    global MESSAGE_COM
    bot.send_message(
        message.chat.id,
        "–°–Ω–æ–≤–∞ –ª–∞–±–∫–∏ –¥–µ–ª–∞–µ—à—å?) –û—Ö —É–∂ —ç—Ç–∏ –≥—Ä–∞—Ñ–∏–∫–∏!..."
        " –°–µ–π—á–∞—Å –±—ã—Å—Ç—Ä–µ–Ω—å–∫–æ –≤—Å—ë –ø–æ—Å—Ç—Ä–æ—é, —Ç–æ–ª—å–∫–æ —Ç–µ–±–µ –ø—Ä–∏–¥—ë—Ç—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤"
        "üòâ. –ò –Ω–µ –∑–∞—Å–∏–∂–∏–≤–∞–π—Å—è, –ª–æ–∂–∏—Å—å —Å–ø–∞—Ç—å)",
    )
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*[types.KeyboardButton(name) for name in ["–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è", "–í—ã—Ö–æ–¥"]])
    msg = bot.send_message(
        message.chat.id,
        "–ö–∞–∫ –º—ã –Ω–∞–∑–æ–≤—ë–º –≥—Ä–∞—Ñ–∏–∫?"
        " –ï—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –¥–∞–≤–∞—Ç—å –µ–º—É –Ω–∞–∑–≤–∞–Ω–∏–µ,"
        " —Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üòâ",
        reply_markup=keyboard,
    )
    MESSAGE_COM = "plot"
    bot.register_next_step_handler(msg, tit)


def tit(message):
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è ax_x(), –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞, –≤—ã–∑—ã–≤–∞–µ—Ç data_mnk()
    :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return:
    """
    global MESSAGE_COM
    if message.content_type == "text":
        if message.text == "–í—ã—Ö–æ–¥":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–ü–µ—Ä–µ–¥—É–º–∞–ª? –ù—É –ª–∞–¥–Ω–æ...", reply_markup=keyboard
            )
            bot.send_sticker(
                message.chat.id,
                "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
            )
        elif message.text == "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è":
            math_part.TITLE = ""
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(*[types.KeyboardButton(name) for name in ["‚úÖ", "‚ùå", "–í—ã—Ö–æ–¥"]])
            msg = bot.send_message(
                message.chat.id, "–ü—Ä—è–º—É—é –ø–æ –ú–ù–ö —Å—Ç—Ä–æ–∏–º?", reply_markup=keyboard
            )
            bot.register_next_step_handler(msg, mnk)
        else:
            math_part.TITLE = message.text
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(*[types.KeyboardButton(name) for name in ["‚úÖ", "‚ùå", "–í—ã—Ö–æ–¥"]])
            msg = bot.send_message(
                message.chat.id, "–ü—Ä—è–º—É—é –ø–æ –ú–ù–ö —Å—Ç—Ä–æ–∏–º?", reply_markup=keyboard
            )
            bot.register_next_step_handler(msg, mnk)

    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"]])
        msg = bot.send_message(
            message.chat.id,
            "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª... –ù–∞–ø–∏—à–∏ –µ—â—ë —Ä–∞–∑ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞."
            " –ï—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –¥–∞–≤–∞—Ç—å –µ–º—É –Ω–∞–∑–≤–∞–Ω–∏–µ,"
            " —Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üòâ",
            reply_markup=keyboard,
        )
        MESSAGE_COM = "plot"
        bot.register_next_step_handler(msg, tit)


def mnk(message):
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è tit(), –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: —Å—Ç—Ä–æ–∏—Ç—å –º–Ω–∫ –ø—Ä—è–º—É—é –∏–ª–∏ –Ω–µ—Ç. –í—ã–∑—ã–≤–∞–µ—Ç
    :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return:
    """
    if message.content_type == "text":
        if message.text == "–í—ã—Ö–æ–¥":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–ü–µ—Ä–µ–¥—É–º–∞–ª? –ù—É –ª–∞–¥–Ω–æ...", reply_markup=keyboard
            )
            bot.send_sticker(
                message.chat.id,
                "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
            )
        elif message.text == "‚úÖ":
            math_part.ERROR_BAR = True
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(*[types.KeyboardButton(name) for name in ["0.0/0.0"]])
            msg = bot.send_message(
                message.chat.id,
                "–ü—Ä–∏—à–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫—Ä–µ—Å—Ç–æ–≤ –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–µ–π –ø–æ –æ—Å—è–º —Ö –∏ y –≤"
                ' —Ñ–æ—Ä–º–∞—Ç–µ "123.213/123.231", –µ—Å–ª–∏ –∫—Ä–µ—Å—Ç—ã –Ω–µ –Ω—É–∂–Ω—ã, —Ç–æ'
                " –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ",
                reply_markup=keyboard,
            )
            bot.register_next_step_handler(msg, error_bars)
        elif message.text == "‚ùå":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
            with open("files/Example.xlsx", "rb") as example:
                bot.send_document(message.chat.id, example)
            msg = bot.send_message(
                message.chat.id,
                "–ü—Ä–∏—à–ª–∏ .xlsx —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–∞–∫ –≤ example.xlsx, –∏ –≤—Å—ë –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ",
                reply_markup=keyboard,
            )
            bot.register_next_step_handler(msg, date_mnk)
        else:
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(*[types.KeyboardButton(name) for name in ["‚úÖ", "‚ùå", "–í—ã—Ö–æ–¥"]])
            msg = bot.send_message(
                message.chat.id,
                "–ò–∑–≤–∏–Ω–∏, –ø–æ–≤—Ç–æ—Ä–∏ –µ—â—ë —Ä–∞–∑... –ü—Ä—è–º—É—é –ø–æ –ú–ù–ö —Å—Ç—Ä–æ–∏–º?",
                reply_markup=keyboard,
            )
            bot.register_next_step_handler(msg, mnk)

    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["‚úÖ", "‚ùå", "–í—ã—Ö–æ–¥"]])
        msg = bot.send_message(
            message.chat.id,
            "–ò–∑–≤–∏–Ω–∏, –ø–æ–≤—Ç–æ—Ä–∏ –µ—â—ë —Ä–∞–∑... –ü—Ä—è–º—É—é –ø–æ –ú–ù–ö —Å—Ç—Ä–æ–∏–º?",
            reply_markup=keyboard,
        )
        bot.register_next_step_handler(msg, mnk)


def error_bars(message):
    if message.content_type == "text":
        if message.text == "–í—ã—Ö–æ–¥":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–ü–µ—Ä–µ–¥—É–º–∞–ª? –ù—É –ª–∞–¥–Ω–æ...", reply_markup=keyboard
            )
            bot.send_sticker(
                message.chat.id,
                "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
            )
        try:
            math_part.ERRORS = list(map(float, message.text.split("/")))
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
            with open("files/Example.xlsx", "rb") as expl:
                bot.send_document(message.chat.id, expl)
            msg = bot.send_message(
                message.chat.id,
                "–ü—Ä–∏—à–ª–∏ .xlsx —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–∞–∫ –≤ example.xlsx –∏ –≤—Å—ë –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ",
                reply_markup=keyboard,
            )
            bot.register_next_step_handler(msg, date_mnk)
        except Exception as e:
            print(e)
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(*[types.KeyboardButton(name) for name in ["0.0/0.0"]])
            msg = bot.send_message(
                message.chat.id,
                "–ù–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö( –î–∞–≤–∞–π –µ—â—ë —Ä–∞–∑. "
                "–ü—Ä–∏—à–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫—Ä–µ—Å—Ç–æ–≤ –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–µ–π –ø–æ –æ—Å—è–º —Ö –∏ y –≤ "
                '—Ñ–æ—Ä–º–∞—Ç–µ "123.213/123.231", –µ—Å–ª–∏ –∫—Ä–µ—Å—Ç—ã –Ω–µ –Ω—É–∂–Ω—ã, —Ç–æ'
                " –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ",
                reply_markup=keyboard,
            )
            bot.register_next_step_handler(msg, error_bars)
    else:
        math_part.ERROR_BAR = True
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["0.0/0.0"]])
        msg = bot.send_message(
            message.chat.id,
            "–¢—ã –ø—Ä–∏—Å–ª–∞–ª —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ( –î–∞–≤–∞–π –µ—â—ë —Ä–∞–∑. "
            "–ü—Ä–∏—à–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫—Ä–µ—Å—Ç–æ–≤ –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–µ–π –ø–æ –æ—Å—è–º —Ö –∏ y –≤ "
            '—Ñ–æ—Ä–º–∞—Ç–µ "123.213/123.231", –µ—Å–ª–∏ –∫—Ä–µ—Å—Ç—ã –Ω–µ –Ω—É–∂–Ω—ã, —Ç–æ'
            " –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ",
            reply_markup=keyboard,
        )
        bot.register_next_step_handler(msg, error_bars)


def date_mnk(message):
    """
    –§—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ä–∏—Å–æ–≤–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞/–ª–∏–Ω–µ–∞—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞/–ø–æ–¥—Å—á—ë—Ç–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç –∏ –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–µ–π, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç
    —Ç–æ–≥–æ, –∫–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±—ã–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    :param message:
    :return:
    """
    if message.content_type == "text":
        if message.text == "–í—ã—Ö–æ–¥":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–ü–µ—Ä–µ–¥—É–º–∞–ª? –ù—É –ª–∞–¥–Ω–æ...", reply_markup=keyboard
            )
            bot.send_sticker(
                message.chat.id,
                "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
            )
        else:
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
            msg = bot.send_message(
                message.chat.id,
                "–¢—ã —Ç–æ—á–Ω–æ –ø—Ä–∏—Å–ª–∞–ª .xlsx —Ñ–∞–π–ª? –î–∞–≤–∞–π –µ—â—ë —Ä–∞–∑! "
                "–ü—Ä–∏—à–ª–∏ .xlsx —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏, –∏ –≤—Å—ë –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ",
                reply_markup=keyboard,
            )
            bot.register_next_step_handler(msg, date_mnk)
    elif message.content_type == "document":
        if message.document.file_name == "Example.xlsx":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
            msg = bot.send_message(
                message.chat.id,
                "–ü–µ—Ä–µ–∏–º–µ–Ω—É–π —Ñ–∞–π–ª, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ü•∫ –ò –ø—Ä–∏—Å—ã–ª–∞–π —Å–Ω–æ–≤–∞, —è –ø–æ–¥–æ–∂–¥—É",
                reply_markup=keyboard,
            )
            bot.send_sticker(
                message.chat.id,
                "CAACAgIAAxkBAAMDXj8HbU7hkvX2ou3kfBAsN6kHtKcAAsUFAAL6C7YIqZjbAAHdPGrWGAQ",
            )
            bot.register_next_step_handler(msg, date_mnk)
        else:
            try:
                file_id = message.json.get("document").get("file_id")
                file_path = bot.get_file(file_id).file_path
                downloaded_file = bot.download_file(file_path)
                FILE_NAME = message.document.file_name
                with open(FILE_NAME, "wb") as new_file:
                    new_file.write(downloaded_file)
                a, b, d_a, d_b = math_part.mnk_calc(FILE_NAME)
                math_part.BOT_PLOT = True
                math_part.plots_drawer(
                    FILE_NAME,
                    math_part.TITLE,
                    math_part.ERRORS[0],
                    math_part.ERRORS[1],
                    math_part.ERROR_BAR,
                )
                keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
                keyboard.add(
                    *[
                        types.KeyboardButton(name)
                        for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]
                    ]
                )
                bot.send_message(
                    message.chat.id, "–ü—Ä–∏–Ω–∏–º–∞–π —Ä–∞–±–æ—Ç—É!)", reply_markup=keyboard
                )
                with open("plot.png", "rb") as photo:
                    bot.send_document(message.chat.id, photo)
                if math_part.ERROR_BAR:
                    for i in range(0, len(a)):
                        bot.send_message(
                            message.chat.id,
                            f"–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã {i + 1}-–æ–π –ø—Ä—è–º–æ–π:\n"
                            f" a = {a[i]} +- {d_a[i]}\n"
                            f" b = {b[i]} +- {d_b[i]}",
                        )
                with open("plot.pdf", "rb") as photo:
                    bot.send_document(message.chat.id, photo)
                os.remove("plot.pdf")
                os.remove("plot.png")
                math_part.BOT_PLOT = False
                if FILE_NAME != "Example.xlsx":
                    os.remove(FILE_NAME)
                math_part.TITLE = ""
                math_part.ERRORS = [0, 0]
                math_part.ERROR_BAR = False
            except Exception as e:
                os.remove(FILE_NAME)
                print(e)
                keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
                keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
                msg = bot.send_message(
                    message.chat.id,
                    "–¢—ã —Ç–æ—á–Ω–æ –ø—Ä–∏—Å–ª–∞–ª .xlsx —Ñ–∞–π–ª –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ? –î–∞–≤–∞–π –µ—â—ë —Ä–∞–∑!",
                    reply_markup=keyboard,
                )
                bot.register_next_step_handler(msg, date_mnk)
    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
        msg = bot.send_message(
            message.chat.id,
            "–¢—ã —Ç–æ—á–Ω–æ –ø—Ä–∏—Å–ª–∞–ª .xlsx —Ñ–∞–π–ª? –î–∞–≤–∞–π –µ—â—ë —Ä–∞–∑! "
            "–ü—Ä–∏—à–ª–∏ .xlsx —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏, –∏ –≤—Å—ë –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ",
            reply_markup=keyboard,
        )
        bot.register_next_step_handler(msg, date_mnk)


@bot.message_handler(func=lambda message: message.text in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"])
def get_start_schedule(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è/–∑–∞–≤—Ç—Ä–∞".
    –£–∑–Ω–∞–µ—Ç –Ω–æ–º–µ—Ä –¥–Ω—è –Ω–µ–¥–µ–ª–∏ —Å–µ–≥–æ–¥–Ω—è/–∑–∞–≤—Ç—Ä–∞ –∏ –ø–æ —ç—Ç–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏—é timetable_by_group().
    :return:
    """
    try:
        student = psg.get_student(message.chat.id)
    except Exception as e:
        print("–ê–®–ò–ü–ö–ê")
        print(e)
        bot.send_message(
            os.environ["ADMIN_1"],
            f"–ü–æ—Å–º–æ—Ç—Ä–∏ –ª–æ–≥–∏ —É —á—É–≤–∞–∫–∞"
            f" user = {message.from_user} id={message.chat.id}"
            f" –ø–æ—à–ª–∞ –ø–æ –ø–∏–∑–¥–µ 706 —Å—Ç—Ä–æ—á–∫–∞...",
        )
        bot.send_message(
            os.environ["ADMIN_2"],
            f"–ü–æ—Å–º–æ—Ç—Ä–∏ –ª–æ–≥–∏ —É —á—É–≤–∞–∫–∞"
            f" user = {message.from_user} id={message.chat.id}"
            f" –ø–æ—à–ª–∞ –ø–æ –ø–∏–∑–¥–µ 706 —Å—Ç—Ä–æ—á–∫–∞...",
        )
        bot.send_message(
            message.chat.id,
            "–ò–∑–≤–∏–Ω–∏, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∫–æ–º–∞–Ω–¥–∞ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–æ–∫ —É–∂–µ –≤–∑—è–ª–∞—Å—å –∑–∞ –¥–µ–ª–æ,"
            " –ø–æ–ø—Ä–æ–±—É–π —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∑–∂–µ) –ß—Ç–æ–±—ã –ø—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–∏–ª–∞—Å—å –±—ã—Å—Ç—Ä–µ–µ"
            " —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å @Error404NF",
        )
        return "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –ø–æ –ø–∏–∑–¥–µ"

    if timetable.timetable.check_group(student[0], student[1]):
        # —Å–ø–∏—Å–æ–∫ –¥–Ω–µ–π –¥–ª—è —É–¥–æ–±–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–æ–≤ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏ (0,1, ..., 6) –≤ –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è
        week = tuple(
            [
                "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
                "–í—Ç–æ—Ä–Ω–∏–∫",
                "–°—Ä–µ–¥–∞",
                "–ß–µ—Ç–≤–µ—Ä–≥",
                "–ü—è—Ç–Ω–∏—Ü–∞",
                "–°—É–±–±–æ—Ç–∞",
                "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ",
            ]
        )
        today = (
            datetime.datetime.today().weekday()
        )  # today - –∫–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (–æ—Ç 0 –¥–æ 6)
        if message.text == "–ù–∞ —Å–µ–≥–æ–¥–Ω—è":  # —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
            schedule = timetable.timetable.timetable_by_group(
                student[1], student[0], week[today]
            )
            STRING = ""  # "—Å—Ç—Ä–æ–∫–∞" —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º, –∫–æ—Ç–æ—Ä—É—é –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            for (
                row
            ) in (
                schedule.iterrows()
            ):  # –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ —Å—Ç—Ä–æ–∫–∞–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, –ø—Ä–∏–ø–ª—é—Å–æ–≤—ã–≤–∞–µ–º –∏—Ö –≤ –æ–±—â—É—é "—Å—Ç—Ä–æ–∫—É"
                # –≤—Ä–µ–º—è –ø–∞—Ä—ã - –∂–∏—Ä–Ω—ã–π + –Ω–∞–∫–ª–æ–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç, –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ
                string: str = (
                    "<b>" + "<i>" + row[0] + "</i>" + "</b>" + "\n" + row[1][0]
                )
                STRING += string + "\n\n"  # –º–µ–∂–¥—É –ø–∞—Ä–∞–º–∏ –ø—Ä–æ–ø—É—Å–∫ (1 enter)
            bot.send_message(
                message.chat.id, STRING, parse_mode="HTML"
            )  # parse_mode - —á—Ç–æ–±—ã —á–∏—Ç–∞–ª –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç
            keyboard = types.ReplyKeyboardMarkup(
                resize_keyboard=True
            )  # –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –∑–∞–≤—Ç—Ä–∞
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–ß–µ–º –µ—â—ë —è –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=keyboard
            )
        elif message.text == "–ù–∞ –∑–∞–≤—Ç—Ä–∞":  # —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞
            tomorrow = 0  # –Ω–æ–º–µ—Ä –¥–Ω—è –∑–∞–≤—Ç—Ä–∞, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ (6), —Ç–æ —É–∂–µ —Å—Ç–æ–∏—Ç
            if today in range(6):  # –µ—Å–ª–∏ –Ω–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, —Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ today + 1
                tomorrow = today + 1
            # —Ç–µ—Å—Ç –Ω–∞ —Ä–∞–Ω–¥–æ–º–Ω–æ–π –≥—Ä—É–ø–ø–µ
            schedule = timetable.timetable.timetable_by_group(
                student[1], student[0], week[tomorrow]
            )
            STRING = ""  # "—Å—Ç—Ä–æ–∫–∞" —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º, –∫–æ—Ç–æ—Ä—É—é –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            for (
                row
            ) in (
                schedule.iterrows()
            ):  # –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ —Å—Ç—Ä–æ–∫–∞–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, –ø—Ä–∏–ø–ª—é—Å–æ–≤—ã–≤–∞–µ–º –∏—Ö –≤ –æ–±—â—É—é "—Å—Ç—Ä–æ–∫—É"
                # –≤—Ä–µ–º—è –ø–∞—Ä—ã - –∂–∏—Ä–Ω—ã–π + –Ω–∞–∫–ª–æ–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç, –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ
                string: str = (
                    "<b>" + "<i>" + row[0] + "</i>" + "</b>" + "\n" + row[1][0]
                )
                STRING += string + "\n\n"  # –º–µ–∂–¥—É –ø–∞—Ä–∞–º–∏ –ø—Ä–æ–ø—É—Å–∫ (1 enter)
            bot.send_message(
                message.chat.id, STRING, parse_mode="HTML"
            )  # parse_mode - —á—Ç–æ–±—ã —á–∏—Ç–∞–ª –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç
            keyboard = types.ReplyKeyboardMarkup(
                resize_keyboard=True
            )  # –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –∑–∞–≤—Ç—Ä–∞
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–ß–µ–º –µ—â—ë —è –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=keyboard
            )
    else:
        bot.send_message(
            message.chat.id,
            "–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ç–æ–±–æ–π –Ω–æ–º–µ—Ä–∞ –∫—É—Ä—Å–∞ –∏ –≥—Ä—É–ø–ø—ã üòû "
            "–ù–∞–∂–º–∏ /profile —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö.",
        )


@bot.message_handler(commands=["timetable"])
def get_course(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º "/timetable".
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–ø—Ä–æ—Å –æ –Ω–æ–º–µ—Ä–µ –∫—É—Ä—Å–∞. –í—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é get_group()
    :param message: telebot.types.Message
    :return:
    """
    if message.text == "/timetable":  # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–ª–æ–∫–∞
        bot.send_message(
            message.chat.id,
            "–°–Ω–æ–≤–∞ –Ω–µ –º–æ–∂–µ—à—å –≤—Å–ø–æ–º–Ω–∏—Ç—å, –∫–∞–∫–∞—è –ø–∞—Ä–∞ —Å–ª–µ–¥—É—é—â–∞—è? :) " "–ù–∏—á–µ–≥–æ, —è —É–∂–µ —Ç—É—Ç!",
        )
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[types.KeyboardButton(name) for name in range(1, 4)]
        )  # –∫–Ω–æ–ø–∫–∏ c –Ω–æ–º–µ—Ä–∞–º–∏ –∫—É—Ä—Å–æ–≤
        keyboard.add(
            *[types.KeyboardButton(name) for name in [4, 5, "–í—ã—Ö–æ–¥"]]
        )  # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
        msg = bot.send_message(
            message.chat.id, "–ù–µ –ø–æ–¥—Å–∫–∞–∂–µ—à—å –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞?", reply_markup=keyboard
        )
        bot.register_next_step_handler(msg, get_group)
    elif (
        message.text == "–õ–∞–¥–Ω–æ, —Å–∞–º –ø–æ—Å–º–æ—Ç—Ä—é"
    ):  # –µ—Å–ª–∏ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ –≤ —Å—á–∏—Ç—ã–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ:
        keyboard = types.ReplyKeyboardMarkup(
            resize_keyboard=True
        )  # –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –∑–∞–≤—Ç—Ä–∞
        keyboard.add(
            *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
        )
        bot.send_message(
            message.chat.id,
            "–ë–µ–∑ –ø—Ä–æ–±–ª–µ–º! " "–ù–æ —Ç—ã —ç—Ç–æ, –∑–∞—Ö–æ–¥–∏, –µ—Å–ª–∏ —á—Ç–æ :)",
            reply_markup=keyboard,
        )
        # —Å—Ç–∏–∫–æ—Å "–¢—ã –∑–∞—Ö–æ–¥–∏ –µ—Å—á–æ"
        bot.send_sticker(
            message.chat.id,
            "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
        )
    elif (
        message.text == "–ü–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑"
    ):  # –µ—Å–ª–∏ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ –≤ —Å—á–∏—Ç—ã–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö –ø—Ä–∏—à–ª–æ
        # —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –µ—â–µ —Ä–∞–∑
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[types.KeyboardButton(name) for name in range(1, 4)]
        )  # —Ç–æ –∂–µ, —á—Ç–æ –∏ –≤ –±–ª–æ–∫–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        keyboard.add(*[types.KeyboardButton(name) for name in [4, 5, "–í—ã—Ö–æ–¥"]])
        msg = bot.send_message(
            message.chat.id, "–ù–µ –ø–æ–¥—Å–∫–∞–∂–µ—à—å –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞?", reply_markup=keyboard
        )
        bot.register_next_step_handler(msg, get_group)


def get_group(message):
    """
    –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–ø—Ä–æ—Å –æ –Ω–æ–º–µ—Ä–µ –≥—Ä—É–ø–ø—ã.
    –í—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é get_weekday().
    :param message: telebot.types.Message
    :return:
    """
    global COURSE_NUM  # –≤—ã–∑—ã–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –Ω–æ–º–µ—Ä–æ–º –∫—É—Ä—Å–∞
    if (
        message.content_type == "text"
    ):  # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–º, –∞ –Ω–µ —Ñ–∞–π–ª–æ–º
        if (
            message.text == "–í—ã—Ö–æ–¥"
        ):  # –µ—Å–ª–∏ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ get_course() –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ
            keyboard = types.ReplyKeyboardMarkup(
                resize_keyboard=True
            )  # –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –∑–∞–≤—Ç—Ä–∞
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–ü–µ—Ä–µ–¥—É–º–∞–ª? –ù—É –ª–∞–¥–Ω–æ...", reply_markup=keyboard
            )
            # —Å—Ç–∏–∫–æ—Å "–¢—ã –∑–∞—Ö–æ–¥–∏ –µ—Å—á–æ"
            bot.send_sticker(
                message.chat.id,
                "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
            )
        elif message.text in map(str, range(1, 6)):  # –µ—Å–ª–∏ –ø—Ä–∏–ª–µ—Ç–µ–ª –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞
            COURSE_NUM = int(message.text)  # –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞ (—á–∏—Å–ª–æ)
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[
                    types.KeyboardButton(name)
                    for name in ["–ú–æ—è –≥—Ä—É–ø–ø–∞", "–í—ã—Ö–æ–¥"]  # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
                ]
            )
            bot.send_message(
                message.chat.id,  # –ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã
                "–ù–µ –ø–æ–¥—Å–∫–∞–∂–µ—à—å –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã?\n"
                "(–í —Ñ–æ—Ä–º–∞—Ç–µ –ë00‚Äì228 –∏–ª–∏ 777, –∫–∞–∫ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏)",
                reply_markup=keyboard,
            )
            bot.register_next_step_handler(message, get_weekday)
        elif (
            message.text == "–õ–∞–¥–Ω–æ, —Å–∞–º –ø–æ—Å–º–æ—Ç—Ä—é"
        ):  # –µ—Å–ª–∏ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ –≤ —Å—á–∏—Ç—ã–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ:
            keyboard = types.ReplyKeyboardMarkup(
                resize_keyboard=True
            )  # –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –∑–∞–≤—Ç—Ä–∞
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id,
                "–ë–µ–∑ –ø—Ä–æ–±–ª–µ–º! " "–ù–æ —Ç—ã —ç—Ç–æ, –∑–∞—Ö–æ–¥–∏, –µ—Å–ª–∏ —á—Ç–æ :)",
                reply_markup=keyboard,
            )
            # —Å—Ç–∏–∫–æ—Å "–¢—ã –∑–∞—Ö–æ–¥–∏ –µ—Å—á–æ"
            bot.send_sticker(
                message.chat.id,
                "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
            )
        elif (
            message.text == "–ü–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑"
        ):  # –µ—Å–ª–∏ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ –≤ —Å—á–∏—Ç—ã–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö –ø—Ä–∏—à–ª–æ
            # —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –µ—â–µ —Ä–∞–∑
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[
                    types.KeyboardButton(name)
                    for name in ["–ú–æ—è –≥—Ä—É–ø–ø–∞", "–í—ã—Ö–æ–¥"]  # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
                ]
            )
            bot.send_message(
                message.chat.id,  # –ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã
                "–ù–µ –ø–æ–¥—Å–∫–∞–∂–µ—à—å –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã?\n"
                "(–í —Ñ–æ—Ä–º–∞—Ç–µ –ë00‚Äì228 –∏–ª–∏ 777, –∫–∞–∫ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏)",
                reply_markup=keyboard,
            )
            bot.register_next_step_handler(message, get_weekday)
        else:  # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ "–í—ã—Ö–æ–¥" –∏ –Ω–µ –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞, —Ç–æ –≥–æ–≤–æ—Ä–∏–º –æ–± –æ—à–∏–±–∫–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ get_course()
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[
                    types.KeyboardButton(name)
                    for name in [
                        "–ü–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑",
                        "–õ–∞–¥–Ω–æ, —Å–∞–º –ø–æ—Å–º–æ—Ç—Ä—é",  # –ø–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞ - –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –∑–∞–Ω–æ–≤–æ, –≤—Ç–æ—Ä–∞—è - –≤—ã—Ö–æ–¥
                    ]
                ]
            )
            msg = bot.send_message(
                message.chat.id,
                "–ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å... –¢—ã –º–Ω–µ —Ç–æ—á–Ω–æ –ø—Ä–∏—Å–ª–∞–ª –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º "
                "—Ñ–æ—Ä–º–∞—Ç–µ?",
                reply_markup=keyboard,
            )
            bot.register_next_step_handler(msg, get_course)
    else:  # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ç–µ–∫—Å—Ç–æ–º, —Ç–æ –≥–æ–≤–æ—Ä–∏–º –æ–± –æ—à–∏–±–∫–µ —Ñ–æ—Ä–º–∞—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ get_course()
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[
                types.KeyboardButton(name)
                for name in ["–ü–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑", "–õ–∞–¥–Ω–æ, —Å–∞–º –ø–æ—Å–º–æ—Ç—Ä—é"]
            ]
        )
        msg = bot.send_message(
            message.chat.id,
            "–ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å... –¢—ã –º–Ω–µ —Ç–æ—á–Ω–æ –ø—Ä–∏—Å–ª–∞–ª –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º "
            "—Ñ–æ—Ä–º–∞—Ç–µ?",
            reply_markup=keyboard,
        )
        bot.register_next_step_handler(msg, get_course)


def get_weekday(message):
    """
    –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ —Å –≤—ã–±–æ—Ä–æ–º –¥–Ω—è –Ω–µ–¥–µ–ª–∏.
    –í—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é get_schedule().
    :param message: telebot.types.Message
    :return:
    """
    global GROUP_NUM, COURSE_NUM  # –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    if message.content_type == "text":  # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–º
        if message.text == "–í—ã—Ö–æ–¥":  # –µ—Å–ª–∏ –∏–∑ get_group() –ø—Ä–∏–ª–µ—Ç–µ–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ
            keyboard = types.ReplyKeyboardMarkup(
                resize_keyboard=True
            )  # –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –∑–∞–≤—Ç—Ä–∞
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–ü–µ—Ä–µ–¥—É–º–∞–ª? –ù—É –ª–∞–¥–Ω–æ...", reply_markup=keyboard
            )
            bot.send_sticker(
                message.chat.id,
                "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
            )
        elif (
            message.text == "–õ–∞–¥–Ω–æ, —Å–∞–º –ø–æ—Å–º–æ—Ç—Ä—é"
        ):  # –µ—Å–ª–∏ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ –≤ —Å—á–∏—Ç—ã–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ:
            keyboard = types.ReplyKeyboardMarkup(
                resize_keyboard=True
            )  # –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –∑–∞–≤—Ç—Ä–∞
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id,
                "–ë–µ–∑ –ø—Ä–æ–±–ª–µ–º! " "–ù–æ —Ç—ã —ç—Ç–æ, –∑–∞—Ö–æ–¥–∏, –µ—Å–ª–∏ —á—Ç–æ :)",
                reply_markup=keyboard,
            )
            # —Å—Ç–∏–∫–æ—Å "–¢—ã –∑–∞—Ö–æ–¥–∏ –µ—Å—á–æ"
            bot.send_sticker(
                message.chat.id,
                "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
            )
        elif message.text == "–ü–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            # –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –¥–ª—è —Ç—ã–∫–æ–≤ –∏ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞ (—Å—Ç—Ä–æ–∫–∏ –≤—ã–±—Ä–∞–Ω—ã –ø–æ —Ä–∞–∑–º–µ—Ä—É —Å–ª–æ–≤)
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫"]]
            )
            keyboard.add(*[types.KeyboardButton(name) for name in ["–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥"]])
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"]]
            )
            keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
            bot.send_message(
                message.chat.id,
                "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å?",
                reply_markup=keyboard,
            )
            bot.register_next_step_handler(message, get_schedule)
        elif message.text == "–ú–æ—è –≥—Ä—É–ø–ø–∞":
            GROUP_NUM = psg.get_student(message.chat.id)[0]
            if timetable.timetable.check_group(GROUP_NUM, COURSE_NUM):
                keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
                # –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –¥–ª—è —Ç—ã–∫–æ–≤ –∏ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞ (—Å—Ç—Ä–æ–∫–∏ –≤—ã–±—Ä–∞–Ω—ã –ø–æ —Ä–∞–∑–º–µ—Ä—É —Å–ª–æ–≤)
                keyboard.add(
                    *[types.KeyboardButton(name) for name in ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫"]]
                )
                keyboard.add(
                    *[types.KeyboardButton(name) for name in ["–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥"]]
                )
                keyboard.add(
                    *[types.KeyboardButton(name) for name in ["–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"]]
                )
                keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
                bot.send_message(
                    message.chat.id,
                    "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å?",
                    reply_markup=keyboard,
                )
                bot.register_next_step_handler(message, get_schedule)
            else:
                keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
                keyboard.add(
                    *[
                        types.KeyboardButton(name)
                        for name in ["–ü–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑", "–õ–∞–¥–Ω–æ, —Å–∞–º –ø–æ—Å–º–æ—Ç—Ä—é"]
                    ]
                )
                msg = bot.send_message(
                    message.chat.id,
                    "–ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å... –¢—ã –º–Ω–µ —Ç–æ—á–Ω–æ –ø—Ä–∏—Å–ª–∞–ª –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º"
                    " —Ñ–æ—Ä–º–∞—Ç–µ?",
                    reply_markup=keyboard,
                )
                bot.register_next_step_handler(msg, get_group)
        else:
            GROUP_NUM = message.text
            if timetable.timetable.check_group(GROUP_NUM, COURSE_NUM):
                keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
                # –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –¥–ª—è —Ç—ã–∫–æ–≤ –∏ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞ (—Å—Ç—Ä–æ–∫–∏ –≤—ã–±—Ä–∞–Ω—ã –ø–æ —Ä–∞–∑–º–µ—Ä—É —Å–ª–æ–≤)
                keyboard.add(
                    *[types.KeyboardButton(name) for name in ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫"]]
                )
                keyboard.add(
                    *[types.KeyboardButton(name) for name in ["–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥"]]
                )
                keyboard.add(
                    *[types.KeyboardButton(name) for name in ["–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"]]
                )
                keyboard.add(*[types.KeyboardButton(name) for name in ["–í—ã—Ö–æ–¥"]])
                bot.send_message(
                    message.chat.id,
                    "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å?",
                    reply_markup=keyboard,
                )
                bot.register_next_step_handler(message, get_schedule)
            else:
                keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
                keyboard.add(
                    *[
                        types.KeyboardButton(name)
                        for name in ["–ü–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑", "–õ–∞–¥–Ω–æ, —Å–∞–º –ø–æ—Å–º–æ—Ç—Ä—é"]
                    ]
                )
                msg = bot.send_message(
                    message.chat.id,
                    "–ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å... –¢—ã –º–Ω–µ —Ç–æ—á–Ω–æ –ø—Ä–∏—Å–ª–∞–ª –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º"
                    " —Ñ–æ—Ä–º–∞—Ç–µ?",
                    reply_markup=keyboard,
                )
                bot.register_next_step_handler(msg, get_group)
    else:  # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ, —Ç–æ –≥–æ–≤–æ—Ä–∏–º –æ–± –æ—à–∏–±–∫–µ —Ñ–æ—Ä–º–∞—Ç–∞, –æ—Ç—Å—ã–ª–∞–µ–º –≤ —Ñ—É–Ω–∫—Ü–∏—é get_group()
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[
                types.KeyboardButton(name)
                for name in ["–ü–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑", "–õ–∞–¥–Ω–æ, —Å–∞–º –ø–æ—Å–º–æ—Ç—Ä—é"]
            ]
        )
        msg = bot.send_message(
            message.chat.id,
            "–ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å... –¢—ã –º–Ω–µ —Ç–æ—á–Ω–æ –ø—Ä–∏—Å–ª–∞–ª –Ω–æ–º–µ—Ä–∞ –≥—Ä—É–ø–ø—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º "
            "—Ñ–æ—Ä–º–∞—Ç–µ?",
            reply_markup=keyboard,
        )
        bot.register_next_step_handler(msg, get_group)


pd.options.display.max_colwidth = 100


def get_schedule(message):
    """
    –§—É–Ω–∫—Ü–∏—è, –≤—ã–¥–∞—é—â–∞—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω—É–∂–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏.
    :param message: telebot.types.Message
    :return:
    """
    global COURSE_NUM, GROUP_NUM
    if message.content_type == "text":  # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è - —Ç–µ–∫—Å—Ç –∏–ª–∏ –Ω–µ—Ç
        if (
            message.text == "–í—ã—Ö–æ–¥"
        ):  # –µ—Å–ª–∏ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ get_group() –ø—Ä–∏–ª–µ—Ç–µ–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ
            keyboard = types.ReplyKeyboardMarkup(
                resize_keyboard=True
            )  # –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –∑–∞–≤—Ç—Ä–∞
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–ü–µ—Ä–µ–¥—É–º–∞–ª? –ù—É –ª–∞–¥–Ω–æ...", reply_markup=keyboard
            )
            bot.send_sticker(
                message.chat.id,
                "CAACAgIAAxkBAAIsCV42vjU8mR9P-zoPiyBu_3_eG-wTAAIMDQACkjajC9UvBD6_RUE4GAQ",
            )
        elif message.text in [
            "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
            "–í—Ç–æ—Ä–Ω–∏–∫",
            "–°—Ä–µ–¥–∞",
            "–ß–µ—Ç–≤–µ—Ä–≥",
            "–ü—è—Ç–Ω–∏—Ü–∞",
            "–°—É–±–±–æ—Ç–∞",
        ]:  # –µ—Å–ª–∏ –ø—Ä–∏–ª–µ—Ç–µ–ª –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
            schedule = timetable.timetable.timetable_by_group(
                COURSE_NUM, GROUP_NUM, message.text
            )
            STRING = ""  # –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –≤—Å–µ–º —Å—Ç—Ä–æ—á–∫–∞–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ STRING –≥–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ,
            # –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–ø—Ä–∞–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ( —Å–º. —Ñ—É–Ω–∫—Ü–∏—é get_start_schedule() )
            for row in schedule.iterrows():
                string: str = (
                    "<b>" + "<i>" + row[0] + "</i>" + "</b>" + "\n" + row[1][0]
                )
                STRING += string + "\n\n"
            bot.send_message(message.chat.id, STRING, parse_mode="HTML")
            keyboard = types.ReplyKeyboardMarkup(
                resize_keyboard=True
            )  # –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –∑–∞–≤—Ç—Ä–∞
            keyboard.add(
                *[types.KeyboardButton(name) for name in ["–ù–∞ —Å–µ–≥–æ–¥–Ω—è", "–ù–∞ –∑–∞–≤—Ç—Ä–∞"]]
            )
            bot.send_message(
                message.chat.id, "–ß–µ–º –µ—â—ë —è –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=keyboard
            )
        else:
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(
                *[
                    types.KeyboardButton(name)
                    for name in ["–ü–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑", "–õ–∞–¥–Ω–æ, —Å–∞–º –ø–æ—Å–º–æ—Ç—Ä—é"]
                ]
            )
            msg = bot.send_message(
                message.chat.id,
                "–ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å... –¢—ã –º–Ω–µ —Ç–æ—á–Ω–æ –ø—Ä–∏—Å–ª–∞–ª –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º "
                "—Ñ–æ—Ä–º–∞—Ç–µ?",
                reply_markup=keyboard,
            )
            bot.register_next_step_handler(msg, get_weekday)
    else:  # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ, —Ç–æ –≥–æ–≤–æ—Ä–∏–º –æ–± –æ—à–∏–±–∫–µ —Ñ–æ—Ä–º–∞—Ç–µ
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[
                types.KeyboardButton(name)
                for name in ["–ü–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑", "–õ–∞–¥–Ω–æ, —Å–∞–º –ø–æ—Å–º–æ—Ç—Ä—é"]
            ]
        )
        msg = bot.send_message(
            message.chat.id,
            "–ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å... –¢—ã –º–Ω–µ —Ç–æ—á–Ω–æ –ø—Ä–∏—Å–ª–∞–ª –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º "
            "—Ñ–æ—Ä–º–∞—Ç–µ?",
            reply_markup=keyboard,
        )
        bot.register_next_step_handler(msg, get_weekday)


@bot.message_handler(commands=["exam"])
def ask_group(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º '/exam'.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –æ –≤—ã–±–æ—Ä–µ –≥—Ä—É–ø–ø—ã –∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é get_exam_timetable().
    :param message: telebot.types.Message
    :return:
    """
    bot.send_message(message.chat.id, "–ï—â—ë –Ω–µ –≤—Ä–µ–º—è... –ù–æ —Ç—ã –Ω–µ –∑–∞–±—ã–≤–∞–π...")
    bot.send_sticker(
        message.chat.id,
        "CAACAgIAAxkBAAMEXj8IxnJkYATlpAOTkJyLiXH2u0UAAvYfAAKiipYBsZcZ_su45LkYBA",
    )


def get_exam_timetable(message):
    """
    –§—É–Ω–∫—Ü–∏—è —Å—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã, –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é get_exam_timetable –∏–∑ –º–æ–¥—É–ª—è timetable,
    –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–∞–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞.
    :param message: telebot.types.Message
    :return:
    """
    if message.text in texting.texting_symbols.groups:
        path = os.path.abspath("")
        timetable.timetable_old.get_exam_timetable(message.text)
        f = open(f"{path}/timetable/exam.txt")
        for line in f:
            bot.send_message(message.chat.id, line)
        open(f"{path}/timetable/exam.txt", "w").close()
    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            *[
                types.KeyboardButton(name)
                for name in ["–ü–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑", "–õ–∞–¥–Ω–æ, —Å–∞–º –ø–æ—Å–º–æ—Ç—Ä—é"]
            ]
        )
        msg = bot.send_message(
            message.chat.id,
            "–ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å... "
            "–¢—ã –º–Ω–µ —Ç–æ—á–Ω–æ –ø—Ä–∏—Å–ª–∞–ª –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ ?",
            reply_markup=keyboard,
        )
        bot.register_next_step_handler(msg, ask_group)


@bot.message_handler(commands=["god_voice"])
def get_message_text(message):
    pers_id = message.chat.id
    admins = [
        int(os.environ["ADMIN_1"]),
        int(os.environ["ADMIN_2"]),
        int(os.environ["ADMIN_3"]),
    ]
    if pers_id in admins:
        msg = bot.send_message(
            message.chat.id, '–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "chat_id/message_text"'
        )
        bot.register_next_step_handler(msg, send_message)
    else:
        bot.send_message(
            message.chat.id,
            "–ë–æ—é—Å—å, —è –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é, –æ —á—ë–º —Ç—ã. \n"
            "–ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é.\n",
        )


def send_message(message):
    try:
        chat_id = int(message.text.split("/")[0])
        text = message.text.split("/")[1]
        bot.send_message(chat_id, text)
        bot.send_message(message.chat.id, "–ì–æ—Ç–æ–≤–æ")
    except Exception as e:
        bot.send_message(message.chat.id, "–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑")
        print(e)


@bot.message_handler(content_types=["text"])
def chatting(message):
    """
    –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –ª—é–±–æ–π –Ω–µ–∑–Ω–∞–∫–æ–º—ã–π –±–æ—Ç—É —Ç–µ–∫—Å—Ç.
    :param message: any text
    :return: —Ü–∏–∫–ª–∏—á–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–¥–Ω–æ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –¥–≤–∞ —Å–º–∞–π–ª–∏–∫–∞,
    –¥–≤–µ —Ü–∏—Ç–∞—Ç—ã, –æ–¥–Ω—É —Ñ–æ—Ç–∫—É —Å–æ–±–∞–∫–∏ –ø—Ä–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–µ–∑–Ω–∞–∫–æ–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    """
    global crazy_tokens
    crazy_tokens += 1
    if crazy_tokens <= 1:
        bot.send_message(
            message.chat.id,
            "–ë–æ—é—Å—å, —è –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é, –æ —á—ë–º —Ç—ã. \n"
            "–ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é.\n",
        )
    elif crazy_tokens <= 3:
        bot.send_message(message.chat.id, random.choice(texting.texting_symbols.emoji))
    elif crazy_tokens <= 5:
        bot.send_message(message.chat.id, random.choice(texting.texting_symbols.quotes))
    elif crazy_tokens == 6:
        doggy = get_image_url()
        """
        API_LINK = 'http://api.forismatic.com/api/method=getQuote&format=text&lang=ru'
        cont = requests.post(API_LINK)
        print(cont.text)
        bot.send_message(message.chat.id, quote)
        """

        bot.send_photo(message.chat.id, photo=doggy)
        crazy_tokens = 0


def get_url():
    """
    –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É —Å–æ–±–∞–∫–∏
    :return: —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É
    """
    contents = requests.get("https://random.dog/woof.json").json()
    url = contents["url"]
    return url


def get_image_url():
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å —Å–æ–±–∞–∫–æ–π
    :return: —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É
    """
    allowed_extension = ["jpg", "jpeg", "png"]
    file_extension = ""
    while file_extension not in allowed_extension:
        url = get_url()
        file_extension = re.search("([^.]*)$", url).group(1).lower()
    return url


bot.polling(none_stop=True)
